{"version":3,"sources":["../../src/entity/amount.ts","../../src/common/convert-json.ts","../../src/common/pubkey.ts","../../src/common/logger.ts","../../src/version.ts","../../src/common/inspect.ts","../../src/common/web3.ts","../../src/entity/bignumber.ts","../../src/entity/constant.ts","../../src/token/sol.ts","../../src/token/mainnet.ts","../../src/token/devnet.ts","../../src/token/testnet.ts","../../src/token/util.ts","../../src/entity/currency.ts","../../src/entity/fraction.ts","../../src/entity/to-format.ts"],"sourcesContent":["import _Big from \"big.js\";\nimport BN from \"bn.js\";\n\nimport { Logger } from \"../common\";\n\nimport { BigNumberish, parseBigNumberish } from \"./bignumber\";\nimport { Rounding, TEN } from \"./constant\";\nimport { Currency, currencyEquals, Token } from \"./currency\";\nimport { Fraction } from \"./fraction\";\nimport toFormat, { WrappedBig } from \"./to-format\";\n\nconst logger = Logger.from(\"entity/amount\");\n\nconst Big = toFormat(_Big);\ntype Big = WrappedBig;\n\nexport function splitNumber(num: string, decimals: number) {\n  let integral = \"0\";\n  let fractional = \"0\";\n\n  if (num.includes(\".\")) {\n    const splited = num.split(\".\");\n    if (splited.length === 2) {\n      [integral, fractional] = splited;\n      fractional = fractional.padEnd(decimals, \"0\");\n    } else {\n      return logger.throwArgumentError(\"invalid number string\", \"num\", num);\n    }\n  } else {\n    integral = num;\n  }\n\n  // fix decimals is 0\n  return [integral, fractional.slice(0, decimals) || fractional];\n}\n\nexport class CurrencyAmount extends Fraction {\n  public readonly currency: Currency;\n\n  public constructor(currency: Currency, amount: BigNumberish, isRaw = true) {\n    let parsedAmount = new BN(0);\n    const multiplier = TEN.pow(new BN(currency.decimals));\n\n    if (isRaw) {\n      parsedAmount = parseBigNumberish(amount);\n    } else {\n      let integralAmount = new BN(0);\n      let fractionalAmount = new BN(0);\n\n      // parse fractional string\n      if (typeof amount === \"string\" || typeof amount === \"number\" || typeof amount === \"bigint\") {\n        const [integral, fractional] = splitNumber(amount.toString(), currency.decimals);\n\n        integralAmount = parseBigNumberish(integral);\n        fractionalAmount = parseBigNumberish(fractional);\n      }\n      // else {\n      //   integralAmount = parseBigNumberish(amount);\n      // }\n\n      integralAmount = integralAmount.mul(multiplier);\n      parsedAmount = integralAmount.add(fractionalAmount);\n    }\n\n    super(parsedAmount, multiplier);\n    this.currency = currency;\n  }\n\n  public get raw() {\n    return this.numerator;\n  }\n\n  public isZero() {\n    return this.raw.isZero();\n  }\n\n  /**\n   * a greater than b\n   */\n  public gt(other: CurrencyAmount) {\n    logger.assert(currencyEquals(this.currency, other.currency), \"gt currency not equals\");\n\n    return this.raw.gt(other.raw);\n  }\n\n  /**\n   * a less than b\n   */\n  public lt(other: CurrencyAmount) {\n    logger.assert(currencyEquals(this.currency, other.currency), \"lt currency not equals\");\n\n    return this.raw.lt(other.raw);\n  }\n\n  public add(other: CurrencyAmount): CurrencyAmount {\n    logger.assert(currencyEquals(this.currency, other.currency), \"add currency not equals\");\n\n    return new CurrencyAmount(this.currency, this.raw.add(other.raw));\n  }\n\n  public sub(other: CurrencyAmount): CurrencyAmount {\n    logger.assert(currencyEquals(this.currency, other.currency), \"sub currency not equals\");\n\n    return new CurrencyAmount(this.currency, this.raw.sub(other.raw));\n  }\n\n  public toSignificant(\n    significantDigits = this.currency.decimals,\n    format?: object,\n    rounding: Rounding = Rounding.ROUND_DOWN,\n  ): string {\n    return super.toSignificant(significantDigits, format, rounding);\n  }\n\n  /**\n   * To fixed\n   *\n   * @example\n   * ```\n   * 1 -> 1.000000000\n   * 1.234 -> 1.234000000\n   * 1.123456789876543 -> 1.123456789\n   * ```\n   */\n  public toFixed(\n    decimalPlaces = this.currency.decimals,\n    format?: object,\n    rounding: Rounding = Rounding.ROUND_DOWN,\n  ): string {\n    logger.assert(decimalPlaces <= this.currency.decimals, \"decimals overflow\");\n\n    return super.toFixed(decimalPlaces, format, rounding);\n  }\n\n  /**\n   * To exact\n   *\n   * @example\n   * ```\n   * 1 -> 1\n   * 1.234 -> 1.234\n   * 1.123456789876543 -> 1.123456789\n   * ```\n   */\n  public toExact(format: object = { groupSeparator: \"\" }): string {\n    Big.DP = this.currency.decimals;\n    return new Big(this.numerator.toString()).div(this.denominator.toString()).toFormat(format);\n  }\n}\n\nexport class TokenAmount extends CurrencyAmount {\n  public readonly token: Token;\n\n  public constructor(token: Token, amount: BigNumberish, isRaw = true) {\n    super(token, amount, isRaw);\n    this.token = token;\n  }\n\n  public add(other: TokenAmount): TokenAmount {\n    logger.assert(currencyEquals(this.token, other.token), \"add token not equals\");\n\n    return new TokenAmount(this.token, this.raw.add(other.raw));\n  }\n\n  public subtract(other: TokenAmount): TokenAmount {\n    logger.assert(currencyEquals(this.token, other.token), \"sub token not equals\");\n\n    return new TokenAmount(this.token, this.raw.sub(other.raw));\n  }\n}\n","import { PublicKey } from \"@solana/web3.js\";\n\nimport { validateAndParsePublicKey } from \"./pubkey\";\n\ntype Primitive = boolean | number | string | null | undefined | PublicKey;\n\n/**\n *\n * @example\n * ```typescript\n * interface A {\n *   keyA: string;\n *   keyB: string;\n *   map: {\n *     hello: string;\n *     i: number;\n *   };\n *   list: (string | number)[];\n *   keyC: number;\n * }\n *\n * type WrappedA = ReplaceType<A, string, boolean> // {\n *   keyA: boolean;\n *   keyB: boolean;\n *   map: {\n *     hello: boolean;\n *     i: number;\n *   };\n *   list: (number | boolean)[];\n *   keyC: number;\n * }\n * ```\n */\nexport type ReplaceType<Old, From, To> = {\n  [T in keyof Old]: Old[T] extends From // to avoid case: Old[T] is an Object,\n    ? Exclude<Old[T], From> | To // when match,  directly replace\n    : Old[T] extends Primitive // judge whether need recursively replace\n    ? From extends Old[T] // it's an Object\n      ? Exclude<Old[T], From> | To // directly replace\n      : Old[T] // stay same\n    : ReplaceType<Old[T], From, To>; // recursively replace\n};\n\nexport function jsonInfo2PoolKeys<T>(jsonInfo: T): ReplaceType<T, string, PublicKey> {\n  // @ts-expect-error no need type for inner code\n  return Object.entries(jsonInfo).reduce((result, [key, value]) => {\n    if (typeof value === \"string\") {\n      result[key] = validateAndParsePublicKey(value);\n    } else if (value instanceof Array) {\n      result[key] = value.map((k) => validateAndParsePublicKey(k));\n    } else {\n      result[key] = value;\n    }\n\n    return result;\n  }, {});\n}\n\nexport function poolKeys2JsonInfo<T>(jsonInfo: T): ReplaceType<T, PublicKey, string> {\n  // @ts-expect-error no need type for inner code\n  return Object.entries(jsonInfo).reduce((result, [key, value]) => {\n    if (value instanceof PublicKey) {\n      result[key] = value.toBase58();\n    } else if (value instanceof Array) {\n      result[key] = value.map((k) => k.toBase58());\n    } else {\n      result[key] = value;\n    }\n\n    return result;\n  }, {});\n}\n","import { PublicKey, SystemProgram } from \"@solana/web3.js\";\n\nimport { Logger } from \"./logger\";\n\nconst logger = Logger.from(\"common/pubkey\");\n\n/* ================= global public keys ================= */\nexport { ASSOCIATED_TOKEN_PROGRAM_ID, TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nexport { SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY } from \"@solana/web3.js\";\n\nexport const SYSTEM_PROGRAM_ID = SystemProgram.programId;\nexport const MEMO_PROGRAM_ID = new PublicKey(\"Memo1UhkJRfHyvLMcVucJwxXeuD728EqVDDwQDxFMNo\");\n\n/* ================= validate public key ================= */\nexport type PublicKeyish = PublicKey | string;\n\nexport function validateAndParsePublicKey(publicKey: PublicKeyish) {\n  if (publicKey instanceof PublicKey) {\n    return publicKey;\n  }\n\n  if (typeof publicKey === \"string\") {\n    try {\n      const key = new PublicKey(publicKey);\n      return key;\n    } catch {\n      return logger.throwArgumentError(\"invalid public key\", \"publicKey\", publicKey);\n    }\n  }\n\n  return logger.throwArgumentError(\"invalid public key\", \"publicKey\", publicKey);\n}\n\nexport async function findProgramAddress(seeds: Array<Buffer | Uint8Array>, programId: PublicKey) {\n  const [publicKey, nonce] = await PublicKey.findProgramAddress(seeds, programId);\n  return { publicKey, nonce };\n}\n\nexport function AccountMeta(publicKey: PublicKey, isSigner: boolean) {\n  return {\n    pubkey: publicKey,\n    isWritable: true,\n    isSigner,\n  };\n}\n\nexport function AccountMetaReadonly(publicKey: PublicKey, isSigner: boolean) {\n  return {\n    pubkey: publicKey,\n    isWritable: false,\n    isSigner,\n  };\n}\n","import { PublicKey } from \"@solana/web3.js\";\n\nimport { version } from \"../version\";\n\n// https://github.com/DABH/colors.js\nimport \"@colors/colors\";\n\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\n\nconst LogLevels: { [name: string]: number } = { debug: 1, default: 2, info: 2, warning: 3, error: 4, off: 5 };\nconst _moduleLogLevel: { [name: string]: number } = {};\n\nlet _globalLogger: Logger;\n\nfunction _checkNormalize(): string {\n  try {\n    const missing: Array<string> = [];\n\n    // Make sure all forms of normalization are supported\n    [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n      try {\n        if (\"test\".normalize(form) !== \"test\") {\n          throw new Error(\"bad normalize\");\n        }\n      } catch (error) {\n        missing.push(form);\n      }\n    });\n\n    if (missing.length) {\n      throw new Error(\"missing \" + missing.join(\", \"));\n    }\n\n    if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n      throw new Error(\"broken implementation\");\n    }\n  } catch (error) {\n    if (error instanceof Error) {\n      return error.message;\n    }\n  }\n\n  return \"\";\n}\n\nconst _normalizeError = _checkNormalize();\n\nexport enum LogLevel {\n  DEBUG = \"DEBUG\",\n  INFO = \"INFO\",\n  WARNING = \"WARNING\",\n  ERROR = \"ERROR\",\n  OFF = \"OFF\",\n}\n\nexport enum ErrorCode {\n  ///////////////////\n  // Generic Errors\n\n  // Unknown Error\n  UNKNOWN_ERROR = \"UNKNOWN_ERROR\",\n\n  // Not Implemented\n  NOT_IMPLEMENTED = \"NOT_IMPLEMENTED\",\n\n  // Unsupported Operation\n  //   - operation\n  UNSUPPORTED_OPERATION = \"UNSUPPORTED_OPERATION\",\n\n  // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n  //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n  NETWORK_ERROR = \"NETWORK_ERROR\",\n\n  // Some sort of bad response from the server\n  RPC_ERROR = \"RPC_ERROR\",\n\n  // Timeout\n  TIMEOUT = \"TIMEOUT\",\n\n  ///////////////////\n  // Operational  Errors\n\n  // Buffer Overrun\n  BUFFER_OVERRUN = \"BUFFER_OVERRUN\",\n\n  // Numeric Fault\n  //   - operation: the operation being executed\n  //   - fault: the reason this faulted\n  NUMERIC_FAULT = \"NUMERIC_FAULT\",\n\n  ///////////////////\n  // Argument Errors\n\n  // Missing new operator to an object\n  //  - name: The name of the class\n  MISSING_NEW = \"MISSING_NEW\",\n\n  // Invalid argument (e.g. value is incompatible with type) to a function:\n  //   - argument: The argument name that was invalid\n  //   - value: The value of the argument\n  INVALID_ARGUMENT = \"INVALID_ARGUMENT\",\n\n  // Missing argument to a function:\n  //   - count: The number of arguments received\n  //   - expectedCount: The number of arguments expected\n  MISSING_ARGUMENT = \"MISSING_ARGUMENT\",\n\n  // Too many arguments\n  //   - count: The number of arguments received\n  //   - expectedCount: The number of arguments expected\n  UNEXPECTED_ARGUMENT = \"UNEXPECTED_ARGUMENT\",\n\n  ///////////////////\n  // Blockchain Errors\n\n  // Insufficien funds (< value + gasLimit * gasPrice)\n  //   - transaction: the transaction attempted\n  INSUFFICIENT_FUNDS = \"INSUFFICIENT_FUNDS\",\n}\n\nconst HEX = \"0123456789abcdef\";\n\nfunction perfectDisplay(value: any, deeping = false) {\n  let _value = value;\n\n  try {\n    if (value instanceof Uint8Array) {\n      let hex = \"\";\n      for (let i = 0; i < value.length; i++) {\n        hex += HEX[value[i] >> 4];\n        hex += HEX[value[i] & 0x0f];\n      }\n      _value = `Uint8Array(0x${hex})`;\n    } else if (value instanceof PublicKey) {\n      _value = `PublicKey(${value.toBase58()})`;\n    } else if (value instanceof Object && !deeping) {\n      const obj = {};\n      Object.entries(value).forEach(([k, v]) => {\n        obj[k] = perfectDisplay(v, true);\n      });\n      _value = JSON.stringify(obj);\n    } else if (!deeping) {\n      _value = JSON.stringify(value);\n    }\n  } catch (error) {\n    _value = JSON.stringify(value.toString());\n  }\n\n  return _value;\n}\n\nexport class Logger {\n  readonly version: string = version;\n  readonly moduleName: string;\n\n  static errors = ErrorCode;\n\n  static levels = LogLevel;\n\n  constructor(moduleName: string) {\n    this.moduleName = moduleName;\n  }\n\n  _log(logLevel: LogLevel, args: Array<any>): void {\n    const level = logLevel.toLowerCase();\n    if (LogLevels[level] == null) {\n      this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n    }\n    const _logLevel = _moduleLogLevel[this.moduleName] || LogLevels[\"default\"];\n    if (_logLevel > LogLevels[level]) {\n      return;\n    }\n    console.log(...args);\n  }\n\n  debug(...args: Array<any>): void {\n    this._log(Logger.levels.DEBUG, [\"[DEBUG]\".blue, ...args]);\n  }\n\n  info(...args: Array<any>): void {\n    this._log(Logger.levels.INFO, [\"[INFO]\".green, ...args]);\n  }\n\n  warn(...args: Array<any>): void {\n    this._log(Logger.levels.WARNING, [\"[WARN]\".yellow, ...args]);\n  }\n\n  makeError(message: string, code?: ErrorCode, params?: any): Error {\n    // Errors are being censored\n    if (_censorErrors) {\n      return this.makeError(\"censored error\", code, {});\n    }\n\n    if (!code) {\n      code = Logger.errors.UNKNOWN_ERROR;\n    }\n    if (!params) {\n      params = {};\n    }\n\n    const messageDetails: Array<string> = [];\n    Object.entries(params).forEach(([key, value]) => {\n      messageDetails.push(`${key}=${perfectDisplay(value)})`);\n    });\n    messageDetails.push(`code=${code}`);\n    messageDetails.push(`module=${this.moduleName}`);\n    messageDetails.push(`version=${this.version}`);\n\n    const reason = message;\n    if (messageDetails.length) {\n      message += \" (\" + messageDetails.join(\", \") + \")\";\n    }\n\n    // @TODO: Any??\n    const error: any = new Error(message);\n    error.reason = reason;\n    error.code = code;\n\n    Object.entries(params).forEach(([key, value]) => {\n      error[key] = value;\n    });\n\n    return error;\n  }\n\n  throwError(message: string, code?: ErrorCode, params?: any): never {\n    throw this.makeError(message, code, params);\n  }\n\n  throwArgumentError(message: string, name: string, value: any): never {\n    return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n      argument: name,\n      value,\n    });\n  }\n\n  assert(condition: any, message: string, code?: ErrorCode, params?: any): void {\n    if (condition) {\n      return;\n    }\n    this.throwError(message, code, params);\n  }\n\n  assertArgument(condition: any, message: string, name: string, value: any): void {\n    if (condition) {\n      return;\n    }\n    this.throwArgumentError(message, name, value);\n  }\n\n  checkNormalize(message?: string): void {\n    if (message == null) {\n      message = \"platform missing String.prototype.normalize\";\n    }\n    if (_normalizeError) {\n      this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"String.prototype.normalize\",\n        form: _normalizeError,\n      });\n    }\n  }\n\n  checkSafeUint53(value: number, message?: string): void {\n    if (typeof value !== \"number\") {\n      return;\n    }\n\n    if (message == null) {\n      message = \"value not safe\";\n    }\n\n    if (value < 0 || value >= 0x1fffffffffffff) {\n      this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n        operation: \"checkSafeInteger\",\n        fault: \"out-of-safe-range\",\n        value,\n      });\n    }\n\n    if (value % 1) {\n      this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n        operation: \"checkSafeInteger\",\n        fault: \"non-integer\",\n        value,\n      });\n    }\n  }\n\n  checkArgumentCount(count: number, expectedCount: number, message?: string): void {\n    if (message) {\n      message = \": \" + message;\n    } else {\n      message = \"\";\n    }\n\n    if (count < expectedCount) {\n      this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n        count,\n        expectedCount,\n      });\n    }\n\n    if (count > expectedCount) {\n      this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n        count,\n        expectedCount,\n      });\n    }\n  }\n\n  checkNew(target: any, kind: any): void {\n    if (target === Object || target == null) {\n      this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n    }\n  }\n\n  checkAbstract(target: any, kind: any): void {\n    if (target === kind) {\n      this.throwError(\n        \"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\",\n        Logger.errors.UNSUPPORTED_OPERATION,\n        { name: target.name, operation: \"new\" },\n      );\n    } else if (target === Object || target == null) {\n      this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n    }\n  }\n\n  static globalLogger(): Logger {\n    if (!_globalLogger) {\n      _globalLogger = new Logger(version);\n    }\n    return _globalLogger;\n  }\n\n  static setCensorship(censorship: boolean, permanent?: boolean): void {\n    if (!censorship && permanent) {\n      this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"setCensorship\",\n      });\n    }\n\n    if (_permanentCensorErrors) {\n      if (!censorship) {\n        return;\n      }\n      this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"setCensorship\",\n      });\n    }\n\n    _censorErrors = !!censorship;\n    _permanentCensorErrors = !!permanent;\n  }\n\n  static setLogLevel(moduleName: string, logLevel: \"DEBUG\" | \"INFO\" | \"WARNING\" | \"ERROR\" | \"OFF\"): void {\n    const level = LogLevels[logLevel.toLowerCase()];\n    if (level == null) {\n      Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n      return;\n    }\n    _moduleLogLevel[moduleName] = level;\n  }\n\n  static from(version: string): Logger {\n    return new Logger(version);\n  }\n}\n","export const version = \"1.1.0-beta.0\";\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\n\nimport { PublicKey } from \"@solana/web3.js\";\nimport BN from \"bn.js\";\n\nexport function inspectPublicKey() {\n  if (typeof Symbol !== \"undefined\" && typeof Symbol.for === \"function\") {\n    try {\n      PublicKey.prototype[Symbol.for(\"nodejs.util.inspect.custom\")] = function () {\n        return `<PublicKey: ${this.toString()}>`;\n      };\n    } catch (e) {\n      // @ts-ignore\n      PublicKey.prototype.inspect = function () {\n        return `<PublicKey: ${this.toString()}>`;\n      };\n    }\n  } else {\n    // @ts-ignore\n    PublicKey.prototype.inspect = function () {\n      return `<PublicKey: ${this.toString()}>`;\n    };\n  }\n}\n\nexport function inspectBN() {\n  if (typeof Symbol !== \"undefined\" && typeof Symbol.for === \"function\") {\n    try {\n      BN.prototype[Symbol.for(\"nodejs.util.inspect.custom\")] = function () {\n        // @ts-ignore\n        return `<${this.red ? \"BN-R\" : \"BN\"}: ${this.toString()}>`;\n      };\n    } catch (e) {\n      // @ts-ignore\n      BN.prototype.inspect = function () {\n        // @ts-ignore\n        return `<${this.red ? \"BN-R\" : \"BN\"}: ${this.toString()}>`;\n      };\n    }\n  } else {\n    // @ts-ignore\n    BN.prototype.inspect = function () {\n      // @ts-ignore\n      return `<${this.red ? \"BN-R\" : \"BN\"}: ${this.toString()}>`;\n    };\n  }\n}\n\nexport function inspectAll() {\n  inspectPublicKey();\n  inspectBN();\n}\n","// import BN from 'bn.js';\n\n// import { Spl, SPL_ACCOUNT_LAYOUT } from '../spl';\n// import { TOKEN_PROGRAM_ID } from './id';\n\nimport {\n  AccountInfo, Commitment, Connection, PACKET_DATA_SIZE, PublicKey, RpcResponseAndContext, SimulatedTransactionResponse,\n  Transaction, TransactionInstruction,\n} from \"@solana/web3.js\";\n\nimport { chunkArray } from \"./lodash\";\nimport { Logger } from \"./logger\";\n\nconst logger = Logger.from(\"common/web3\");\n\ninterface MultipleAccountsJsonRpcResponse {\n  jsonrpc: string;\n  id: string;\n  error?: {\n    code: number;\n    message: string;\n  };\n  result: {\n    context: { slot: number };\n    value: { data: Array<string>; executable: boolean; lamports: number; owner: string; rentEpoch: number }[];\n  };\n}\n\nexport interface GetMultipleAccountsInfoConfig {\n  batchRequest?: boolean;\n  commitment?: Commitment;\n}\n\n// export async function batchGetMultipleAccountsInfo() {}\n\nexport async function getMultipleAccountsInfo(\n  connection: Connection,\n  publicKeys: PublicKey[],\n  config?: GetMultipleAccountsInfoConfig,\n): Promise<(AccountInfo<Buffer> | null)[]> {\n  const { batchRequest, commitment } = {\n    // default\n    ...{\n      batchRequest: false,\n    },\n    // custom\n    ...config,\n  };\n\n  const chunkedKeys = chunkArray(publicKeys, 100);\n  let results: (AccountInfo<Buffer> | null)[][] = new Array(chunkedKeys.length).fill([]);\n\n  if (batchRequest) {\n    const batch = chunkedKeys.map((keys) => {\n      const args = connection._buildArgs([keys.map((key) => key.toBase58())], commitment, \"base64\");\n      return {\n        methodName: \"getMultipleAccounts\",\n        args,\n      };\n    });\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    const unsafeResponse: MultipleAccountsJsonRpcResponse[] = await connection._rpcBatchRequest(batch);\n    results = unsafeResponse.map((unsafeRes: MultipleAccountsJsonRpcResponse) => {\n      if (unsafeRes.error) {\n        return logger.throwError(\"failed to get info for multiple accounts\", Logger.errors.RPC_ERROR, {\n          message: unsafeRes.error.message,\n        });\n      }\n\n      return unsafeRes.result.value.map((accountInfo) => {\n        if (accountInfo) {\n          const { data, executable, lamports, owner, rentEpoch } = accountInfo;\n\n          if (data.length !== 2 && data[1] !== \"base64\") {\n            return logger.throwError(\"info must be base64 encoded\", Logger.errors.RPC_ERROR);\n          }\n\n          return {\n            data: Buffer.from(data[0], \"base64\"),\n            executable,\n            lamports,\n            owner: new PublicKey(owner),\n            rentEpoch,\n          };\n        } else {\n          return null;\n        }\n      });\n    });\n  } else {\n    try {\n      results = (await Promise.all(\n        chunkedKeys.map((keys) => connection.getMultipleAccountsInfo(keys, commitment)),\n      )) as (AccountInfo<Buffer> | null)[][];\n    } catch (error) {\n      if (error instanceof Error) {\n        return logger.throwError(\"failed to get info for multiple accounts\", Logger.errors.RPC_ERROR, {\n          message: error.message,\n        });\n      }\n    }\n  }\n\n  return results.flat();\n}\n\nexport async function getMultipleAccountsInfoWithCustomFlags<T extends { pubkey: PublicKey }>(\n  connection: Connection,\n  publicKeysWithCustomFlag: T[],\n  config?: GetMultipleAccountsInfoConfig,\n): Promise<({ accountInfo: AccountInfo<Buffer> | null } & T)[]> {\n  const multipleAccountsInfo = await getMultipleAccountsInfo(\n    connection,\n    publicKeysWithCustomFlag.map((o) => o.pubkey),\n    config,\n  );\n\n  return publicKeysWithCustomFlag.map((o, idx) => ({ ...o, accountInfo: multipleAccountsInfo[idx] }));\n}\n\nexport interface GetTokenAccountsByOwnerConfig {\n  commitment?: Commitment;\n}\n\n// export async function getTokenAccountsByOwner(\n//   connection: Connection,\n//   owner: PublicKey,\n//   config?: GetTokenAccountsByOwnerConfig\n// ) {\n//   const defaultConfig = {};\n//   const customConfig = { ...defaultConfig, ...config };\n\n//   const solReq = connection.getAccountInfo(owner, customConfig.commitment);\n//   const tokenReq = connection.getTokenAccountsByOwner(\n//     owner,\n//     {\n//       programId: TOKEN_PROGRAM_ID\n//     },\n//     customConfig.commitment\n//   );\n\n//   const [solResp, tokenResp] = await Promise.all([solReq, tokenReq]);\n\n//   const accounts: {\n//     publicKey?: PublicKey;\n//     mint?: PublicKey;\n//     isAssociated?: boolean;\n//     amount: BN;\n//     isNative: boolean;\n//   }[] = [];\n\n//   for (const { pubkey, account } of tokenResp.value) {\n//     // double check layout length\n//     if (account.data.length !== SPL_ACCOUNT_LAYOUT.span) {\n//       return logger.throwArgumentError('invalid token account layout length', 'publicKey', pubkey);\n//     }\n\n//     const { mint, amount } = SPL_ACCOUNT_LAYOUT.decode(account.data);\n//     const associatedTokenAddress = await Spl.getAssociatedTokenAddress({ mint, owner });\n\n//     accounts.push({\n//       publicKey: pubkey,\n//       mint,\n//       isAssociated: associatedTokenAddress.equals(pubkey),\n//       amount,\n//       isNative: false\n//     });\n//   }\n\n//   if (solResp) {\n//     accounts.push({\n//       amount: new BN(solResp.lamports),\n//       isNative: true\n//     });\n//   }\n\n//   return accounts;\n// }\n\n/**\n * Forecast transaction size\n */\nexport function forecastTransactionSize(instructions: TransactionInstruction[], signers: PublicKey[]) {\n  if (instructions.length < 1) {\n    return logger.throwArgumentError(\"no instructions provided\", \"instructions\", instructions);\n  }\n  if (signers.length < 1) {\n    return logger.throwArgumentError(\"no signers provided\", \"signers\", signers);\n  }\n\n  const transaction = new Transaction({\n    recentBlockhash: \"11111111111111111111111111111111\",\n    feePayer: signers[0],\n  });\n\n  transaction.add(...instructions);\n\n  const message = transaction.compileMessage().serialize();\n  // SIGNATURE_LENGTH = 64\n  const transactionLength = signers.length + signers.length * 64 + message.length;\n\n  return transactionLength;\n}\n\n/**\n * Simulates multiple instruction\n */\nexport async function simulateMultipleInstruction(\n  connection: Connection,\n  instructions: TransactionInstruction[],\n  keyword: string,\n) {\n  const feePayer = new PublicKey(\"RaydiumSimuLateTransaction11111111111111111\");\n\n  const transactions: Transaction[] = [];\n\n  let transaction = new Transaction({ feePayer });\n\n  for (const instruction of instructions) {\n    if (forecastTransactionSize([...transaction.instructions, instruction], [feePayer]) > PACKET_DATA_SIZE) {\n      transactions.push(transaction);\n      transaction = new Transaction({ feePayer });\n      transaction.add(instruction);\n    } else {\n      transaction.add(instruction);\n    }\n  }\n  if (transaction.instructions.length > 0) {\n    transactions.push(transaction);\n  }\n\n  let results: RpcResponseAndContext<SimulatedTransactionResponse>[] = [];\n\n  try {\n    results = await Promise.all(transactions.map((transaction) => connection.simulateTransaction(transaction)));\n  } catch (error) {\n    if (error instanceof Error) {\n      return logger.throwError(\"failed to simulate for instructions\", Logger.errors.RPC_ERROR, {\n        message: error.message,\n      });\n    }\n  }\n\n  const logs: string[] = [];\n  for (const result of results) {\n    const { value } = result;\n    logger.debug(\"simulate result:\", result);\n\n    if (value.logs) {\n      const filteredLog = value.logs.filter((log) => log && log.includes(keyword));\n      logger.debug(\"filteredLog:\", logs);\n\n      logger.assertArgument(filteredLog.length !== 0, \"simulate log not match keyword\", \"keyword\", keyword);\n\n      logs.push(...filteredLog);\n    }\n  }\n\n  return logs;\n}\n\nexport function parseSimulateLogToJson(log: string, keyword: string) {\n  const results = log.match(/{[\"\\w:,]+}/g);\n  if (!results || results.length !== 1) {\n    return logger.throwArgumentError(\"simulate log fail to match json\", \"keyword\", keyword);\n  }\n\n  return results[0];\n}\n\nexport function parseSimulateValue(log: string, key: string) {\n  const reg = new RegExp(`\"${key}\":(\\\\d+)`, \"g\");\n\n  const results = reg.exec(log);\n  if (!results || results.length !== 2) {\n    return logger.throwArgumentError(\"simulate log fail to match key\", \"key\", key);\n  }\n\n  return results[1];\n}\n","import BN from \"bn.js\";\n\nimport { Logger } from \"../common\";\n\nimport { TEN } from \"./constant\";\n\nconst logger = Logger.from(\"entity/bignumber\");\n\nexport type BigNumberish = BN | string | number | bigint;\n\nconst MAX_SAFE = 0x1fffffffffffff;\n\nexport function parseBigNumberish(value: BigNumberish) {\n  // BN\n  if (value instanceof BN) {\n    return value;\n  }\n\n  // string\n  if (typeof value === \"string\") {\n    if (value.match(/^-?[0-9]+$/)) {\n      return new BN(value);\n    }\n\n    return logger.throwArgumentError(\"invalid BigNumberish string\", \"value\", value);\n  }\n\n  // number\n  if (typeof value === \"number\") {\n    if (value % 1) {\n      return logger.throwArgumentError(\"BigNumberish number underflow\", \"value\", value);\n    }\n\n    if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n      return logger.throwArgumentError(\"BigNumberish number overflow\", \"value\", value);\n    }\n\n    return new BN(String(value));\n  }\n\n  // bigint\n  if (typeof value === \"bigint\") {\n    return new BN(value.toString());\n  }\n\n  return logger.throwArgumentError(\"invalid BigNumberish value\", \"value\", value);\n}\n\nexport function tenExponentiate(shift: BigNumberish) {\n  return TEN.pow(parseBigNumberish(shift));\n}\n\n// round up\nexport function divCeil(a: BN, b: BN): BN {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const dm = a.divmod(b);\n\n  // Fast case - exact division\n  if (dm.mod.isZero()) return dm.div;\n\n  // Round up\n  return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n}\n","import BN from \"bn.js\";\n\nexport enum Rounding {\n  ROUND_DOWN,\n  ROUND_HALF_UP,\n  ROUND_UP,\n}\n\nexport const ZERO = new BN(0);\nexport const ONE = new BN(1);\nexport const TWO = new BN(2);\nexport const THREE = new BN(3);\nexport const FIVE = new BN(5);\nexport const TEN = new BN(10);\nexport const _100 = new BN(100);\nexport const _1000 = new BN(1000);\nexport const _10000 = new BN(10000);\n","import { NativeTokenInfo, SplTokenInfo } from \"./type\";\n\nexport const SOL: NativeTokenInfo = {\n  symbol: \"SOL\",\n  name: \"Solana\",\n  decimals: 9,\n};\n\nexport const WSOL: SplTokenInfo = {\n  symbol: \"WSOL\",\n  name: \"Wrapped SOL\",\n  mint: \"So11111111111111111111111111111111111111112\",\n  decimals: 9,\n  extensions: {\n    coingeckoId: \"solana\",\n  },\n};\n","import { WSOL } from \"./sol\";\nimport { LpTokens, SplTokens } from \"./type\";\n\nexport const MAINNET_SPL_TOKENS: SplTokens = {\n  *[Symbol.iterator]() {\n    yield* Object.values(this);\n  },\n  WSOL: {\n    ...WSOL,\n  },\n  BTC: {\n    symbol: \"BTC\",\n    name: \"Bitcoin\",\n    mint: \"9n4nbM75f5Ui33ZbPYXn59EwSgE8CGsHtAeTH5YFeJ9E\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"bitcoin\",\n    },\n  },\n  ETH: {\n    symbol: \"ETH\",\n    name: \"Ethereum\",\n    mint: \"2FPyTwcZLUg1MDrwsyoP4D6s1tM7hAkHYRjkNb5w6Pxk\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"ethereum\",\n    },\n  },\n  USDT: {\n    symbol: \"USDT\",\n    name: \"Tether\",\n    mint: \"Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"tether\",\n    },\n  },\n  WUSDT: {\n    symbol: \"WUSDT\",\n    name: \"Wrapped USDT\",\n    mint: \"BQcdHdAQW1hczDbBi9hiegXAR7A98Q9jx3X3iBBBDiq4\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"tether\",\n    },\n  },\n  USDC: {\n    symbol: \"USDC\",\n    name: \"USD Coin\",\n    mint: \"EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"usd-coin\",\n    },\n  },\n  WUSDC: {\n    symbol: \"WUSDC\",\n    name: \"Wrapped USDC\",\n    mint: \"BXXkv6z8ykpG1yuvUDPgh732wzVHB69RnB9YgSYh3itW\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"usd-coin\",\n    },\n  },\n  YFI: {\n    symbol: \"YFI\",\n    name: \"YFI\",\n    mint: \"3JSf5tPeuscJGtaCp5giEiDhv51gQ4v3zWg8DGgyLfAB\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"yearn-finance\",\n    },\n  },\n  LINK: {\n    symbol: \"LINK\",\n    name: \"Chainlink\",\n    mint: \"CWE8jPTUYhdCTZYWPTe1o5DFqfdjzWKc9WKz6rSjQUdG\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"chainlink\",\n    },\n  },\n  XRP: {\n    symbol: \"XRP\",\n    name: \"XRP\",\n    mint: \"Ga2AXHpfAF6mv2ekZwcsJFqu7wB4NV331qNH7fW9Nst8\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"ripple\",\n    },\n  },\n  SUSHI: {\n    symbol: \"SUSHI\",\n    name: \"SUSHI\",\n    mint: \"AR1Mtgh7zAtxuxGd2XPovXPVjcSdY3i4rQYisNadjfKy\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"sushi\",\n    },\n  },\n  ALEPH: {\n    symbol: \"ALEPH\",\n    name: \"ALEPH\",\n    mint: \"CsZ5LZkDS7h9TDKjrbL7VAwQZ9nsRu8vJLhRYfmGaN8K\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"aleph\",\n    },\n  },\n  SXP: {\n    symbol: \"SXP\",\n    name: \"SXP\",\n    mint: \"SF3oTvfWzEP3DTwGSvUXRrGTvr75pdZNnBLAH9bzMuX\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"swipe\",\n    },\n  },\n  HGET: {\n    symbol: \"HGET\",\n    name: \"HGET\",\n    mint: \"BtZQfWqDGbk9Wf2rXEiWyQBdBY1etnUUn6zEphvVS7yN\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"hedget\",\n    },\n  },\n  CREAM: {\n    symbol: \"CREAM\",\n    name: \"CREAM\",\n    mint: \"5Fu5UUgbjpUvdBveb3a1JTNirL8rXtiYeSMWvKjtUNQv\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"cream-2\",\n    },\n  },\n  UNI: {\n    symbol: \"UNI\",\n    name: \"UNI\",\n    mint: \"DEhAasscXF4kEGxFgJ3bq4PpVGp5wyUxMRvn6TzGVHaw\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"uniswap\",\n    },\n  },\n  SRM: {\n    symbol: \"SRM\",\n    name: \"Serum\",\n    mint: \"SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"serum\",\n    },\n  },\n  FTT: {\n    symbol: \"FTT\",\n    name: \"FTX Token\",\n    mint: \"AGFEad2et2ZJif9jaGpdMixQqvW5i81aBdvKe7PHNfz3\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"ftx-token\",\n    },\n  },\n  MSRM: {\n    symbol: \"MSRM\",\n    name: \"MegaSerum\",\n    mint: \"MSRMcoVyrFxnSgo5uXwone5SKcGhT1KEJMFEkMEWf9L\",\n    decimals: 0,\n    extensions: {\n      coingeckoId: \"megaserum\",\n    },\n  },\n  TOMO: {\n    symbol: \"TOMO\",\n    name: \"TOMO\",\n    mint: \"GXMvfY2jpQctDqZ9RoU3oWPhufKiCcFEfchvYumtX7jd\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"tomochain\",\n    },\n  },\n  KARMA: {\n    symbol: \"KARMA\",\n    name: \"KARMA\",\n    mint: \"EcqExpGNFBve2i1cMJUTR4bPXj4ZoqmDD2rTkeCcaTFX\",\n    decimals: 4,\n    extensions: {\n      coingeckoId: \"karma-dao\",\n    },\n  },\n  LUA: {\n    symbol: \"LUA\",\n    name: \"LUA\",\n    mint: \"EqWCKXfs3x47uVosDpTRgFniThL9Y8iCztJaapxbEaVX\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"lua-token\",\n    },\n  },\n  MATH: {\n    symbol: \"MATH\",\n    name: \"MATH\",\n    mint: \"GeDS162t9yGJuLEHPWXXGrb1zwkzinCgRwnT8vHYjKza\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"math\",\n    },\n  },\n  KEEP: {\n    symbol: \"KEEP\",\n    name: \"KEEP\",\n    mint: \"GUohe4DJUA5FKPWo3joiPgsB7yzer7LpDmt1Vhzy3Zht\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"keep-network\",\n    },\n  },\n  SWAG: {\n    symbol: \"SWAG\",\n    name: \"SWAG\",\n    mint: \"9F9fNTT6qwjsu4X4yWYKZpsbw5qT7o6yR2i57JF2jagy\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"swag-finance\",\n    },\n  },\n  FIDA: {\n    symbol: \"FIDA\",\n    name: \"Bonfida\",\n    mint: \"EchesyfXePKdLtoiZSL8pBe8Myagyy8ZRqsACNCFGnvp\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"bonfida\",\n    },\n  },\n  KIN: {\n    symbol: \"KIN\",\n    name: \"Kin\",\n    mint: \"kinXdEcpDQeHPEuQnqmUgtYykqKGVFq6CeVX5iAHJq6\",\n    decimals: 5,\n    extensions: {\n      coingeckoId: \"kin\",\n    },\n  },\n  MAPS: {\n    symbol: \"MAPS\",\n    name: \"MAPS\",\n    mint: \"MAPS41MDahZ9QdKXhVa4dWB9RuyfV4XqhyAZ8XcYepb\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"maps\",\n    },\n  },\n  OXY: {\n    symbol: \"OXY\",\n    name: \"Oxygen\",\n    mint: \"z3dn17yLaGMKffVogeFHQ9zWVcXgqgf3PQnDsNs2g6M\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"oxygen\",\n    },\n  },\n  RAY: {\n    symbol: \"RAY\",\n    name: \"Raydium\",\n    mint: \"4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"raydium\",\n    },\n  },\n  xCOPE: {\n    symbol: \"xCOPE\",\n    name: \"xCOPE\",\n    mint: \"3K6rftdAaQYMPunrtNRHgnK2UAtjm2JwyT2oCiTDouYE\",\n    decimals: 0,\n    extensions: {\n      coingeckoId: \"cope\",\n    },\n  },\n  COPE: {\n    symbol: \"COPE\",\n    name: \"Cope\",\n    mint: \"8HGyAAB1yoM1ttS7pXjHMa3dukTFGQggnFFH3hJZgzQh\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"cope\",\n    },\n  },\n  STEP: {\n    symbol: \"STEP\",\n    name: \"Step Finance\",\n    mint: \"StepAscQoEioFxxWGnh2sLBDFp9d8rvKz2Yp39iDpyT\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"step-finance\",\n    },\n  },\n  MEDIA: {\n    symbol: \"MEDIA\",\n    name: \"Media Network\",\n    mint: \"ETAtLmCmsoiEEKfNrHKJ2kYy3MoABhU6NQvpSfij5tDs\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"media-network\",\n    },\n  },\n  ROPE: {\n    symbol: \"ROPE\",\n    name: \"Rope Token\",\n    mint: \"8PMHT4swUMtBzgHnh5U564N5sjPSiUz2cjEQzFnnP1Fo\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"rope-token\",\n    },\n  },\n  MER: {\n    symbol: \"MER\",\n    name: \"Mercurial\",\n    mint: \"MERt85fc5boKw3BW1eYdxonEuJNvXbiMbs6hvheau5K\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"mercurial\",\n    },\n  },\n  TULIP: {\n    symbol: \"TULIP\",\n    name: \"Tulip Protocol\",\n    mint: \"TuLipcqtGVXP9XR62wM8WWCm6a9vhLs7T1uoWBk6FDs\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"solfarm\",\n    },\n  },\n  SNY: {\n    symbol: \"SNY\",\n    name: \"SNY\",\n    mint: \"4dmKkXNHdgYsXqBHCuMikNQWwVomZURhYvkkX5c4pQ7y\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"synthetify-token\",\n    },\n  },\n  SLRS: {\n    symbol: \"SLRS\",\n    name: \"SLRS\",\n    mint: \"SLRSSpSLUTP7okbCUBYStWCo1vUgyt775faPqz8HUMr\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"solrise-finance\",\n    },\n  },\n  WOO: {\n    symbol: \"WOO\",\n    name: \"WOO Network\",\n    mint: \"E5rk3nmgLUuKUiS94gg4bpWwWwyjCMtddsAXkTFLtHEy\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"woo-network\",\n    },\n  },\n  BOP: {\n    symbol: \"BOP\",\n    name: \"Boring Protocol\",\n    mint: \"BLwTnYKqf7u4qjgZrrsKeNs2EzWkMLqVCu6j8iHyrNA3\",\n    decimals: 8,\n    extensions: {\n      coingeckoId: \"boring-protocol\",\n    },\n  },\n  SAMO: {\n    symbol: \"SAMO\",\n    name: \"Samoyedcoin\",\n    mint: \"7xKXtg2CW87d97TXJSDpbD5jBkheTqA83TZRuJosgAsU\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"samoyedcoin\",\n    },\n  },\n  renBTC: {\n    symbol: \"renBTC\",\n    name: \"renBTC\",\n    mint: \"CDJWUqTcYTVAKXAVXoQZFes5JUFc7owSeq7eMQcDSbo5\",\n    decimals: 8,\n    extensions: {\n      coingeckoId: \"renbtc\",\n    },\n  },\n  renDOGE: {\n    symbol: \"renDOGE\",\n    name: \"renDOGE\",\n    mint: \"ArUkYE2XDKzqy77PRRGjo4wREWwqk6RXTfM9NeqzPvjU\",\n    decimals: 8,\n    extensions: {\n      coingeckoId: \"rendoge\",\n    },\n  },\n  LIKE: {\n    symbol: \"LIKE\",\n    name: \"Only1\",\n    mint: \"3bRTivrVsitbmCTGtqwp7hxXPsybkjn4XLNtPsHqa3zR\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"only1\",\n    },\n  },\n  DXL: {\n    symbol: \"DXL\",\n    name: \"Dexlab\",\n    mint: \"GsNzxJfFn6zQdJGeYsupJWzUAm57Ba7335mfhWvFiE9Z\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"dexlab\",\n    },\n  },\n  mSOL: {\n    symbol: \"mSOL\",\n    name: \"Marinade staked SOL\",\n    mint: \"mSoLzYCxHdYgdzU16g5QSh3i5K3z3KZK7ytfqcJm7So\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"msol\",\n    },\n  },\n  PAI: {\n    symbol: \"PAI\",\n    name: \"Parrot USD\",\n    mint: \"Ea5SjE2Y6yvCeW5dYTn7PYMuW5ikXkvbGdcmSnXeaLjS\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"parrot-usd\",\n    },\n  },\n  PORT: {\n    symbol: \"PORT\",\n    name: \"Port Finance\",\n    mint: \"PoRTjZMPXb9T7dyU7tpLEZRQj7e6ssfAE62j2oQuc6y\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"port-finance\",\n    },\n  },\n  MNGO: {\n    symbol: \"MNGO\",\n    name: \"Mango\",\n    mint: \"MangoCzJ36AjZyKwVj3VnYU4GTonjfVEnJmvvWaxLac\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"mango-markets\",\n    },\n  },\n  CRP: {\n    symbol: \"CRP\",\n    name: \"CropperFinance\",\n    mint: \"DubwWZNWiNGMMeeQHPnMATNj77YZPZSAz2WVR5WjLJqz\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"cropperfinance\",\n    },\n  },\n  ATLAS: {\n    symbol: \"ATLAS\",\n    name: \"Star Atlas\",\n    mint: \"ATLASXmbPQxBUYbxPsV97usA3fPQYEqzQBUHgiFCUsXx\",\n    decimals: 8,\n    extensions: {\n      coingeckoId: \"star-atlas\",\n    },\n  },\n  POLIS: {\n    symbol: \"POLIS\",\n    name: \"Star Atlas DAO\",\n    mint: \"poLisWXnNRwC6oBu1vHiuKQzFjGL4XDSu4g9qjz9qVk\",\n    decimals: 8,\n    extensions: {\n      coingeckoId: \"star-atlas-dao\",\n    },\n  },\n  GRAPE: {\n    symbol: \"GRAPE\",\n    name: \"Grape Protocol\",\n    mint: \"8upjSpvjcdpuzhfR1zriwg5NXkwDruejqNE9WNbPRtyA\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"grape-2\",\n    },\n  },\n  GENE: {\n    symbol: \"GENE\",\n    name: \"Genopets\",\n    mint: \"GENEtH5amGSi8kHAtQoezp1XEXwZJ8vcuePYnXdKrMYz\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"genopets\",\n    },\n  },\n  DFL: {\n    symbol: \"DFL\",\n    name: \"DeFi Land\",\n    mint: \"DFL1zNkaGPWm1BqAVqRjCZvHmwTFrEaJtbzJWgseoNJh\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"defi-land\",\n    },\n  },\n  CHEEMS: {\n    symbol: \"CHEEMS\",\n    name: \"Cheems\",\n    mint: \"3FoUAsGDbvTD6YZ4wVKJgTB76onJUKz7GPEBNiR5b8wc\",\n    decimals: 4,\n    extensions: {\n      coingeckoId: \"cheems\",\n    },\n  },\n  stSOL: {\n    symbol: \"stSOL\",\n    name: \"Lido Staked SOL\",\n    mint: \"7dHbWXmci3dT8UFYWYZweBLXgycu7Y3iL6trKn1Y7ARj\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"lido-staked-sol\",\n    },\n  },\n  LARIX: {\n    symbol: \"LARIX\",\n    name: \"Larix\",\n    mint: \"Lrxqnh6ZHKbGy3dcrCED43nsoLkM1LTzU2jRfWe8qUC\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"larix\",\n    },\n  },\n  RIN: {\n    symbol: \"RIN\",\n    name: \"Aldrin\",\n    mint: \"E5ndSkaB17Dm7CsD22dvcjfrYSDLCxFcMd6z8ddCk5wp\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"aldrin\",\n    },\n  },\n  APEX: {\n    symbol: \"APEX\",\n    name: \"ApeXit Finance\",\n    mint: \"51tMb3zBKDiQhNwGqpgwbavaGH54mk8fXFzxTc1xnasg\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"apexit-finance\",\n    },\n  },\n  MNDE: {\n    symbol: \"MNDE\",\n    name: \"Marinade\",\n    mint: \"MNDEFzGvMt87ueuHvVU9VcTqsAP5b3fTGPsHuuPA5ey\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"marinade\",\n    },\n  },\n  LIQ: {\n    symbol: \"LIQ\",\n    name: \"LIQ Protocol\",\n    mint: \"4wjPQJ6PrkC4dHhYghwJzGBVP78DkBzA2U3kHoFNBuhj\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"liq-protocol\",\n    },\n  },\n  WAG: {\n    symbol: \"WAG\",\n    name: \"Waggle Network\",\n    mint: \"5tN42n9vMi6ubp67Uy4NnmM5DMZYN8aS8GeB3bEDHr6E\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"waggle-network\",\n    },\n  },\n  wLDO: {\n    symbol: \"wLDO\",\n    name: \"wLDO\",\n    mint: \"HZRCwxP2Vq9PCpPXooayhJ2bxTpo5xfpQrwB1svh332p\",\n    decimals: 8,\n    extensions: {},\n  },\n  SLIM: {\n    symbol: \"SLIM\",\n    name: \"Solanium\",\n    mint: \"xxxxa1sKNGwFtw2kFn8XauW9xq8hBZ5kVtcSesTT9fW\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"solanium\",\n    },\n  },\n  PRT: {\n    symbol: \"PRT\",\n    name: \"Parrot Protocol\",\n    mint: \"PRT88RkA4Kg5z7pKnezeNH4mafTvtQdfFgpQTGRjz44\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"parrot-protocol\",\n    },\n  },\n  SBR: {\n    symbol: \"SBR\",\n    name: \"SBR\",\n    mint: \"Saber2gLauYim4Mvftnrasomsv6NvAuncvMEZwcLpD1\",\n    decimals: 6,\n    extensions: {},\n  },\n  FAB: {\n    symbol: \"FAB\",\n    name: \"Fabric\",\n    mint: \"EdAhkbj5nF9sRM7XN7ewuW8C9XEUMs8P7cnoQ57SYE96\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"fabric\",\n    },\n  },\n  ABR: {\n    symbol: \"ABR\",\n    name: \"Allbridge\",\n    mint: \"a11bdAAuV8iB2fu7X6AxAvDTo1QZ8FXB3kk5eecdasp\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"allbridge\",\n    },\n  },\n  IVN: {\n    symbol: \"IVN\",\n    name: \"Investin\",\n    mint: \"iVNcrNE9BRZBC9Aqf753iZiZfbszeAVUoikgT9yvr2a\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"investin\",\n    },\n  },\n  CYS: {\n    symbol: \"CYS\",\n    name: \"Cyclos\",\n    mint: \"BRLsMczKuaR5w9vSubF4j8HwEGGprVAyyVgS4EX7DKEg\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"cyclos\",\n    },\n  },\n  FRKT: {\n    symbol: \"FRKT\",\n    name: \"FRAKT Token\",\n    mint: \"ErGB9xa24Szxbk1M28u2Tx8rKPqzL6BroNkkzk5rG4zj\",\n    decimals: 8,\n    extensions: {\n      coingeckoId: \"frakt-token\",\n    },\n  },\n  AURY: {\n    symbol: \"AURY\",\n    name: \"Aurory\",\n    mint: \"AURYydfxJib1ZkTir1Jn1J9ECYUtjb6rKQVmtYaixWPP\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"aurory\",\n    },\n  },\n  SYP: {\n    symbol: \"SYP\",\n    name: \"Sypool\",\n    mint: \"FnKE9n6aGjQoNWRBZXy4RW6LZVao7qwBonUbiD7edUmZ\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"sypool\",\n    },\n  },\n  WOOF: {\n    symbol: \"WOOF\",\n    name: \"WOOF\",\n    mint: \"9nEqaUcb16sQ3Tn1psbkWqyhPdLmfHWjKGymREjsAgTE\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"woof-token\",\n    },\n  },\n  ORCA: {\n    symbol: \"ORCA\",\n    name: \"Orca\",\n    mint: \"orcaEKTdK7LKz57vaAYr9QeNsVEPfiu6QeMU1kektZE\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"orca\",\n    },\n  },\n  SLND: {\n    symbol: \"SLND\",\n    name: \"Solend\",\n    mint: \"SLNDpmoWTVADgEdndyvWzroNL7zSi1dF9PC3xHGtPwp\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"solend\",\n    },\n  },\n  weWETH: {\n    symbol: \"weWETH\",\n    name: \"weWETH\",\n    mint: \"7vfCXTUXx5WJV5JADk17DUJ4ksgau7utNKj4b963voxs\",\n    decimals: 8,\n    extensions: {},\n  },\n  weUNI: {\n    symbol: \"weUNI\",\n    name: \"weUNI\",\n    mint: \"8FU95xFJhUUkyyCLU13HSzDLs7oC4QZdXQHL6SCeab36\",\n    decimals: 8,\n    extensions: {},\n  },\n  weSUSHI: {\n    symbol: \"weSUSHI\",\n    name: \"weSUSHI\",\n    mint: \"ChVzxWRmrTeSgwd3Ui3UumcN8KX7VK3WaD4KGeSKpypj\",\n    decimals: 8,\n    extensions: {},\n  },\n  GOFX: {\n    symbol: \"GOFX\",\n    name: \"GooseFX\",\n    mint: \"GFX1ZjR2P15tmrSwow6FjyDYcEkoFb4p4gJCpLBjaxHD\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"goosefx\",\n    },\n  },\n  IN: {\n    symbol: \"IN\",\n    name: \"Invictus\",\n    mint: \"inL8PMVd6iiW3RCBJnr5AsrRN6nqr4BTrcNuQWQSkvY\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"invictus\",\n    },\n  },\n  weDYDX: {\n    symbol: \"weDYDX\",\n    name: \"weDYDX\",\n    mint: \"4Hx6Bj56eGyw8EJrrheM6LBQAvVYRikYCWsALeTrwyRU\",\n    decimals: 8,\n    extensions: {},\n  },\n  STARS: {\n    symbol: \"STARS\",\n    name: \"StarLaunch\",\n    mint: \"HCgybxq5Upy8Mccihrp7EsmwwFqYZtrHrsmsKwtGXLgW\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"starlaunch\",\n    },\n  },\n  weAXS: {\n    symbol: \"weAXS\",\n    name: \"weAXS\",\n    mint: \"HysWcbHiYY9888pHbaqhwLYZQeZrcQMXKQWRqS7zcPK5\",\n    decimals: 8,\n    extensions: {},\n  },\n  weSHIB: {\n    symbol: \"weSHIB\",\n    name: \"weSHIB\",\n    mint: \"CiKu4eHsVrc1eueVQeHn7qhXTcVu95gSQmBpX4utjL9z\",\n    decimals: 8,\n    extensions: {},\n  },\n  OXS: {\n    symbol: \"OXS\",\n    name: \"Oxbull Solana\",\n    mint: \"4TGxgCSJQx2GQk9oHZ8dC5m3JNXTYZHjXumKAW3vLnNx\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"oxbull-solana\",\n    },\n  },\n  CWAR: {\n    symbol: \"CWAR\",\n    name: \"Cryowar\",\n    mint: \"HfYFjMKNZygfMC8LsQ8LtpPsPxEJoXJx4M6tqi75Hajo\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"cryowar-token\",\n    },\n  },\n  UPS: {\n    symbol: \"UPS\",\n    name: \"UPFI Network\",\n    mint: \"EwJN2GqUGXXzYmoAciwuABtorHczTA5LqbukKXV1viH7\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"upfi-network\",\n    },\n  },\n  weSAND: {\n    symbol: \"weSAND\",\n    name: \"weSAND\",\n    mint: \"49c7WuCZkQgc3M4qH8WuEUNXfgwupZf1xqWkDQ7gjRGt\",\n    decimals: 8,\n    extensions: {},\n  },\n  weMANA: {\n    symbol: \"weMANA\",\n    name: \"weMANA\",\n    mint: \"7dgHoN8wBZCc5wbnQ2C47TDnBMAxG4Q5L3KjP67z8kNi\",\n    decimals: 8,\n    extensions: {},\n  },\n  CAVE: {\n    symbol: \"CAVE\",\n    name: \"Crypto Cavemen\",\n    mint: \"4SZjjNABoqhbd4hnapbvoEPEqT8mnNkfbEoAwALf1V8t\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"cave\",\n    },\n  },\n  JSOL: {\n    symbol: \"JSOL\",\n    name: \"JPool\",\n    mint: \"7Q2afV64in6N6SeZsAAB81TJzwDoD6zpqmHkzi9Dcavn\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"jpool\",\n    },\n  },\n  APT: {\n    symbol: \"APT\",\n    name: \"Apricot\",\n    mint: \"APTtJyaRX5yGTsJU522N4VYWg3vCvSb65eam5GrPT5Rt\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"apricot\",\n    },\n  },\n  SONAR: {\n    symbol: \"SONAR\",\n    name: \"SonarWatch\",\n    mint: \"sonarX4VtVkQemriJeLm6CKeW3GDMyiBnnAEMw1MRAE\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"sonarwatch\",\n    },\n  },\n  SHILL: {\n    symbol: \"SHILL\",\n    name: \"SHILL Token\",\n    mint: \"6cVgJUqo4nmvQpbgrDZwyfd6RwWw5bfnCamS3M9N1fd\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"shill-token\",\n    },\n  },\n  TTT: {\n    symbol: \"TTT\",\n    name: \"TabTrader\",\n    mint: \"FNFKRV3V8DtA3gVJN6UshMiLGYA8izxFwkNWmJbFjmRj\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"tabtrader\",\n    },\n  },\n  BOKU: {\n    symbol: \"BOKU\",\n    name: \"Boryoku Dragonz\",\n    mint: \"CN7qFa5iYkHz99PTctvT4xXUHnxwjQ5MHxCuTJtPN5uS\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"boku\",\n    },\n  },\n  MIMO: {\n    symbol: \"MIMO\",\n    name: \"Million Monke\",\n    mint: \"9TE7ebz1dsFo1uQ2T4oYAKSm39Y6fWuHrd6Uk6XaiD16\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"million-monke\",\n    },\n  },\n  wbWBNB: {\n    symbol: \"wbWBNB\",\n    name: \"wbWBNB\",\n    mint: \"9gP2kCy3wA1ctvYWQk75guqXuHfrEomqydHLtcTCqiLa\",\n    decimals: 8,\n    extensions: {},\n  },\n  wePEOPLE: {\n    symbol: \"wePEOPLE\",\n    name: \"wePEOPLE\",\n    mint: \"CobcsUrt3p91FwvULYKorQejgsm5HoQdv5T8RUZ6PnLA\",\n    decimals: 8,\n    extensions: {},\n  },\n  XTAG: {\n    symbol: \"XTAG\",\n    name: \"xHashtag\",\n    mint: \"5gs8nf4wojB5EXgDUWNLwXpknzgV2YWDhveAeBZpVLbp\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"xhashtag\",\n    },\n  },\n  KKO: {\n    symbol: \"KKO\",\n    name: \"Kineko\",\n    mint: \"kiNeKo77w1WBEzFFCXrTDRWGRWGP8yHvKC9rX6dqjQh\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"kineko\",\n    },\n  },\n  VI: {\n    symbol: \"VI\",\n    name: \"Vybit\",\n    mint: \"7zBWymxbZt7PVHQzfi3i85frc1YRiQc23K7bh3gos8ZC\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"vybit\",\n    },\n  },\n  SOLC: {\n    symbol: \"SOLC\",\n    name: \"Solcubator\",\n    mint: \"Bx1fDtvTN6NvE4kjdPHQXtmGSg582bZx9fGy4DQNMmAT\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"solcubator\",\n    },\n  },\n  STR: {\n    symbol: \"STR\",\n    name: \"Solster\",\n    mint: \"9zoqdwEBKWEi9G5Ze8BSkdmppxGgVv1Kw4LuigDiNr9m\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"solster\",\n    },\n  },\n  SPWN: {\n    symbol: \"SPWN\",\n    name: \"Bitspawn\",\n    mint: \"5U9QqCPhqXAJcEv9uyzFJd5zhN93vuPk1aNNkXnUfPnt\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"bitspawn\",\n    },\n  },\n  ISOLA: {\n    symbol: \"ISOLA\",\n    name: \"Intersola\",\n    mint: \"333iHoRM2Awhf9uVZtSyTfU8AekdGrgQePZsKMFPgKmS\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"intersola\",\n    },\n  },\n  RUN: {\n    symbol: \"RUN\",\n    name: \"Run\",\n    mint: \"6F9XriABHfWhit6zmMUYAQBSy6XK5VF1cHXuW5LDpRtC\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"run\",\n    },\n  },\n  REAL: {\n    symbol: \"REAL\",\n    name: \"Realy Metaverse\",\n    mint: \"AD27ov5fVU2XzwsbvnFvb1JpCBaCB5dRXrczV9CqSVGb\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"realy-metaverse\",\n    },\n  },\n  CRWNY: {\n    symbol: \"CRWNY\",\n    name: \"CRWNY\",\n    mint: \"CRWNYkqdgvhGGae9CKfNka58j6QQkaD5bLhKXvUYqnc1\",\n    decimals: 6,\n    extensions: {},\n  },\n  BLOCK: {\n    symbol: \"BLOCK\",\n    name: \"Blockasset\",\n    mint: \"NFTUkR4u7wKxy9QLaX2TGvd9oZSWoMo4jqSJqdMb7Nk\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"blockasset\",\n    },\n  },\n  SOLAR: {\n    symbol: \"SOLAR\",\n    name: \"Solar\",\n    mint: \"2wmKXX1xsxLfrvjEPrt2UHiqj8Gbzwxvffr9qmNjsw8g\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"solar\",\n    },\n  },\n  BASIS: {\n    symbol: \"BASIS\",\n    name: \"basis.markets\",\n    mint: \"Basis9oJw9j8cw53oMV7iqsgo6ihi9ALw4QR31rcjUJa\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"basis-markets\",\n    },\n  },\n  SOLX: {\n    symbol: \"SOLX\",\n    name: \"Soldex\",\n    mint: \"CH74tuRLTYcxG7qNJCsV9rghfLXJCQJbsu7i52a8F1Gn\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"soldex\",\n    },\n  },\n  CHICKS: {\n    symbol: \"CHICKS\",\n    name: \"SolChicks Token\",\n    mint: \"cxxShYRVcepDudXhe7U62QHvw8uBJoKFifmzggGKVC2\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"solchicks-token\",\n    },\n  },\n  GST: {\n    symbol: \"GST\",\n    name: \"GST\",\n    mint: \"AFbX8oGjGpmVFywbVouvhQSRmiW2aR1mohfahi4Y2AdB\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"gst\",\n    },\n  },\n  MBS: {\n    symbol: \"MBS\",\n    name: \"MonkeyBall\",\n    mint: \"Fm9rHUTF5v3hwMLbStjZXqNBBoZyGriQaFM6sTFz3K8A\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"monkeyball\",\n    },\n  },\n  PRISM: {\n    symbol: \"PRISM\",\n    name: \"Prism\",\n    mint: \"PRSMNsEPqhGVCH1TtWiJqPjJyh2cKrLostPZTNy1o5x\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"prism\",\n    },\n  },\n  MEAN: {\n    symbol: \"MEAN\",\n    name: \"Meanfi\",\n    mint: \"MEANeD3XDdUmNMsRGjASkSWdC8prLYsoRJ61pPeHctD\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"meanfi\",\n    },\n  },\n  TINY: {\n    symbol: \"TINY\",\n    name: \"Tiny Colony\",\n    mint: \"HKfs24UEDQpHS5hUyKYkHd9q7GY5UQ679q2bokeL2whu\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"tiny-colony\",\n    },\n  },\n  SHDW: {\n    symbol: \"SHDW\",\n    name: \"GenesysGo Shadow\",\n    mint: \"SHDWyBxihqiCj6YekG2GUr7wqKLeLAMK1gHZck9pL6y\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"genesysgo-shadow\",\n    },\n  },\n  SCY: {\n    symbol: \"SCY\",\n    name: \"Synchrony\",\n    mint: \"SCYfrGCw8aDiqdgcpdGjV6jp4UVVQLuphxTDLNWu36f\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"synchrony\",\n    },\n  },\n  SLC: {\n    symbol: \"SLC\",\n    name: \"Solice\",\n    mint: \"METAmTMXwdb8gYzyCPfXXFmZZw4rUsXX58PNsDg7zjL\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"solice\",\n    },\n  },\n};\n\nexport const MAINNET_LP_TOKENS: LpTokens = {\n  *[Symbol.iterator]() {\n    yield* Object.values(this);\n  },\n  FIDA_RAY_V4: {\n    symbol: \"FIDA-RAY\",\n    name: \"FIDA-RAY V4 LP\",\n    mint: \"DsBuznXRTmzvEdb36Dx3aVLVo1XmH7r1PRZUFugLPTFv\",\n\n    base: MAINNET_SPL_TOKENS.FIDA,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.FIDA.decimals,\n\n    version: 4,\n  },\n  OXY_RAY_V4: {\n    symbol: \"OXY-RAY\",\n    name: \"OXY-RAY V4 LP\",\n    mint: \"FwaX9W7iThTZH5MFeasxdLpxTVxRcM7ZHieTCnYog8Yb\",\n\n    base: MAINNET_SPL_TOKENS.OXY,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.OXY.decimals,\n\n    version: 4,\n  },\n  MAPS_RAY_V4: {\n    symbol: \"MAPS-RAY\",\n    name: \"MAPS-RAY V4 LP\",\n    mint: \"CcKK8srfVdTSsFGV3VLBb2YDbzF4T4NM2C3UEjC39RLP\",\n\n    base: MAINNET_SPL_TOKENS.MAPS,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.MAPS.decimals,\n\n    version: 4,\n  },\n  KIN_RAY_V4: {\n    symbol: \"KIN-RAY\",\n    name: \"KIN-RAY V4 LP\",\n    mint: \"CHT8sft3h3gpLYbCcZ9o27mT5s3Z6VifBVbUiDvprHPW\",\n\n    base: MAINNET_SPL_TOKENS.KIN,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    // mistake, a special one\n    decimals: 6,\n\n    version: 4,\n  },\n  RAY_USDT_V4: {\n    symbol: \"RAY-USDT\",\n    name: \"RAY-USDT V4 LP\",\n    mint: \"C3sT1R3nsw4AVdepvLTLKr5Gvszr7jufyBWUCvy4TUvT\",\n\n    base: MAINNET_SPL_TOKENS.RAY,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.RAY.decimals,\n\n    version: 4,\n  },\n  SOL_USDC_V4: {\n    symbol: \"SOL-USDC\",\n    name: \"SOL-USDC V4 LP\",\n    mint: \"8HoQnePLqPj4M7PUDzfw8e3Ymdwgc7NLGnaTUapubyvu\",\n\n    base: MAINNET_SPL_TOKENS.WSOL,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.WSOL.decimals,\n\n    version: 4,\n  },\n  YFI_USDC_V4: {\n    symbol: \"YFI-USDC\",\n    name: \"YFI-USDC V4 LP\",\n    mint: \"865j7iMmRRycSYUXzJ33ZcvLiX9JHvaLidasCyUyKaRE\",\n\n    base: MAINNET_SPL_TOKENS.YFI,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.YFI.decimals,\n\n    version: 4,\n  },\n  SRM_USDC_V4: {\n    symbol: \"SRM-USDC\",\n    name: \"SRM-USDC V4 LP\",\n    mint: \"9XnZd82j34KxNLgQfz29jGbYdxsYznTWRpvZE3SRE7JG\",\n\n    base: MAINNET_SPL_TOKENS.SRM,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SRM.decimals,\n\n    version: 4,\n  },\n  FTT_USDC_V4: {\n    symbol: \"FTT-USDC\",\n    name: \"FTT-USDC V4 LP\",\n    mint: \"75dCoKfUHLUuZ4qEh46ovsxfgWhB4icc3SintzWRedT9\",\n\n    base: MAINNET_SPL_TOKENS.FTT,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.FTT.decimals,\n\n    version: 4,\n  },\n  BTC_USDC_V4: {\n    symbol: \"BTC-USDC\",\n    name: \"BTC-USDC V4 LP\",\n    mint: \"2hMdRdVWZqetQsaHG8kQjdZinEMBz75vsoWTCob1ijXu\",\n\n    base: MAINNET_SPL_TOKENS.BTC,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.BTC.decimals,\n\n    version: 4,\n  },\n  SUSHI_USDC_V4: {\n    symbol: \"SUSHI-USDC\",\n    name: \"SUSHI-USDC V4 LP\",\n    mint: \"2QVjeR9d2PbSf8em8NE8zWd8RYHjFtucDUdDgdbDD2h2\",\n\n    base: MAINNET_SPL_TOKENS.SUSHI,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SUSHI.decimals,\n\n    version: 4,\n  },\n  TOMO_USDC_V4: {\n    symbol: \"TOMO-USDC\",\n    name: \"TOMO-USDC V4 LP\",\n    mint: \"CHyUpQFeW456zcr5XEh4RZiibH8Dzocs6Wbgz9aWpXnQ\",\n\n    base: MAINNET_SPL_TOKENS.TOMO,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.TOMO.decimals,\n\n    version: 4,\n  },\n  LINK_USDC_V4: {\n    symbol: \"LINK-USDC\",\n    name: \"LINK-USDC V4 LP\",\n    mint: \"BqjoYjqKrXtfBKXeaWeAT5sYCy7wsAYf3XjgDWsHSBRs\",\n\n    base: MAINNET_SPL_TOKENS.LINK,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.LINK.decimals,\n\n    version: 4,\n  },\n  ETH_USDC_V4: {\n    symbol: \"ETH-USDC\",\n    name: \"ETH-USDC V4 LP\",\n    mint: \"13PoKid6cZop4sj2GfoBeujnGfthUbTERdE5tpLCDLEY\",\n\n    base: MAINNET_SPL_TOKENS.ETH,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.ETH.decimals,\n\n    version: 4,\n  },\n  xCOPE_USDC_V4: {\n    symbol: \"xCOPE-USDC\",\n    name: \"xCOPE-USDC V4 LP\",\n    mint: \"2Vyyeuyd15Gp8aH6uKE72c4hxc8TVSLibxDP9vzspQWG\",\n\n    base: MAINNET_SPL_TOKENS.xCOPE,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.xCOPE.decimals,\n\n    version: 4,\n  },\n  SOL_USDT_V4: {\n    symbol: \"SOL-USDT\",\n    name: \"SOL-USDT V4 LP\",\n    mint: \"Epm4KfTj4DMrvqn6Bwg2Tr2N8vhQuNbuK8bESFp4k33K\",\n\n    base: MAINNET_SPL_TOKENS.WSOL,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.WSOL.decimals,\n\n    version: 4,\n  },\n  YFI_USDT_V4: {\n    symbol: \"YFI-USDT\",\n    name: \"YFI-USDT V4 LP\",\n    mint: \"FA1i7fej1pAbQbnY8NbyYUsTrWcasTyipKreDgy1Mgku\",\n\n    base: MAINNET_SPL_TOKENS.YFI,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.YFI.decimals,\n\n    version: 4,\n  },\n  SRM_USDT_V4: {\n    symbol: \"SRM-USDT\",\n    name: \"SRM-USDT V4 LP\",\n    mint: \"HYSAu42BFejBS77jZAZdNAWa3iVcbSRJSzp3wtqCbWwv\",\n\n    base: MAINNET_SPL_TOKENS.SRM,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.SRM.decimals,\n\n    version: 4,\n  },\n  FTT_USDT_V4: {\n    symbol: \"FTT-USDT\",\n    name: \"FTT-USDT V4 LP\",\n    mint: \"2cTCiUnect5Lap2sk19xLby7aajNDYseFhC9Pigou11z\",\n\n    base: MAINNET_SPL_TOKENS.FTT,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.FTT.decimals,\n\n    version: 4,\n  },\n  BTC_USDT_V4: {\n    symbol: \"BTC-USDT\",\n    name: \"BTC-USDT V4 LP\",\n    mint: \"DgGuvR9GSHimopo3Gc7gfkbKamLKrdyzWkq5yqA6LqYS\",\n\n    base: MAINNET_SPL_TOKENS.BTC,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.BTC.decimals,\n\n    version: 4,\n  },\n  SUSHI_USDT_V4: {\n    symbol: \"SUSHI-USDT\",\n    name: \"SUSHI-USDT V4 LP\",\n    mint: \"Ba26poEYDy6P2o95AJUsewXgZ8DM9BCsmnU9hmC9i4Ki\",\n\n    base: MAINNET_SPL_TOKENS.SUSHI,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.SUSHI.decimals,\n\n    version: 4,\n  },\n  TOMO_USDT_V4: {\n    symbol: \"TOMO-USDT\",\n    name: \"TOMO-USDT V4 LP\",\n    mint: \"D3iGro1vn6PWJXo9QAPj3dfta6dKkHHnmiiym2EfsAmi\",\n\n    base: MAINNET_SPL_TOKENS.TOMO,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.TOMO.decimals,\n\n    version: 4,\n  },\n  LINK_USDT_V4: {\n    symbol: \"LINK-USDT\",\n    name: \"LINK-USDT V4 LP\",\n    mint: \"Dr12Sgt9gkY8WU5tRkgZf1TkVWJbvjYuPAhR3aDCwiiX\",\n\n    base: MAINNET_SPL_TOKENS.LINK,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.LINK.decimals,\n\n    version: 4,\n  },\n  ETH_USDT_V4: {\n    symbol: \"ETH-USDT\",\n    name: \"ETH-USDT V4 LP\",\n    mint: \"nPrB78ETY8661fUgohpuVusNCZnedYCgghzRJzxWnVb\",\n\n    base: MAINNET_SPL_TOKENS.ETH,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.ETH.decimals,\n\n    version: 4,\n  },\n  YFI_SRM_V4: {\n    symbol: \"YFI-SRM\",\n    name: \"YFI-SRM V4 LP\",\n    mint: \"EGJht91R7dKpCj8wzALkjmNdUUUcQgodqWCYweyKcRcV\",\n\n    base: MAINNET_SPL_TOKENS.YFI,\n    quote: MAINNET_SPL_TOKENS.SRM,\n    decimals: MAINNET_SPL_TOKENS.YFI.decimals,\n\n    version: 4,\n  },\n  FTT_SRM_V4: {\n    symbol: \"FTT-SRM\",\n    name: \"FTT-SRM V4 LP\",\n    mint: \"AsDuPg9MgPtt3jfoyctUCUgsvwqAN6RZPftqoeiPDefM\",\n\n    base: MAINNET_SPL_TOKENS.FTT,\n    quote: MAINNET_SPL_TOKENS.SRM,\n    decimals: MAINNET_SPL_TOKENS.FTT.decimals,\n\n    version: 4,\n  },\n  BTC_SRM_V4: {\n    symbol: \"BTC-SRM\",\n    name: \"BTC-SRM V4 LP\",\n    mint: \"AGHQxXb3GSzeiLTcLtXMS2D5GGDZxsB2fZYZxSB5weqB\",\n\n    base: MAINNET_SPL_TOKENS.BTC,\n    quote: MAINNET_SPL_TOKENS.SRM,\n    decimals: MAINNET_SPL_TOKENS.BTC.decimals,\n\n    version: 4,\n  },\n  SUSHI_SRM_V4: {\n    symbol: \"SUSHI-SRM\",\n    name: \"SUSHI-SRM V4 LP\",\n    mint: \"3HYhUnUdV67j1vn8fu7ExuVGy5dJozHEyWvqEstDbWwE\",\n\n    base: MAINNET_SPL_TOKENS.SUSHI,\n    quote: MAINNET_SPL_TOKENS.SRM,\n    decimals: MAINNET_SPL_TOKENS.SUSHI.decimals,\n\n    version: 4,\n  },\n  TOMO_SRM_V4: {\n    symbol: \"TOMO-SRM\",\n    name: \"TOMO-SRM V4 LP\",\n    mint: \"GgH9RnKrQpaMQeqmdbMvs5oo1A24hERQ9wuY2pSkeG7x\",\n\n    base: MAINNET_SPL_TOKENS.TOMO,\n    quote: MAINNET_SPL_TOKENS.SRM,\n    decimals: MAINNET_SPL_TOKENS.TOMO.decimals,\n\n    version: 4,\n  },\n  LINK_SRM_V4: {\n    symbol: \"LINK-SRM\",\n    name: \"LINK-SRM V4 LP\",\n    mint: \"GXN6yJv12o18skTmJXaeFXZVY1iqR18CHsmCT8VVCmDD\",\n\n    base: MAINNET_SPL_TOKENS.LINK,\n    quote: MAINNET_SPL_TOKENS.SRM,\n    decimals: MAINNET_SPL_TOKENS.LINK.decimals,\n\n    version: 4,\n  },\n  ETH_SRM_V4: {\n    symbol: \"ETH-SRM\",\n    name: \"ETH-SRM V4 LP\",\n    mint: \"9VoY3VERETuc2FoadMSYYizF26mJinY514ZpEzkHMtwG\",\n\n    base: MAINNET_SPL_TOKENS.ETH,\n    quote: MAINNET_SPL_TOKENS.SRM,\n    decimals: MAINNET_SPL_TOKENS.ETH.decimals,\n\n    version: 4,\n  },\n  SRM_SOL_V4: {\n    symbol: \"SRM-SOL\",\n    name: \"SRM-SOL V4 LP\",\n    mint: \"AKJHspCwDhABucCxNLXUSfEzb7Ny62RqFtC9uNjJi4fq\",\n\n    base: MAINNET_SPL_TOKENS.SRM,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.SRM.decimals,\n\n    version: 4,\n  },\n  STEP_USDC_V4: {\n    symbol: \"STEP-USDC\",\n    name: \"STEP-USDC V4 LP\",\n    mint: \"3k8BDobgihmk72jVmXYLE168bxxQUhqqyESW4dQVktqC\",\n\n    base: MAINNET_SPL_TOKENS.STEP,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.STEP.decimals,\n\n    version: 4,\n  },\n  MEDIA_USDC_V4: {\n    symbol: \"MEDIA-USDC\",\n    name: \"MEDIA-USDC V4 LP\",\n    mint: \"A5zanvgtioZGiJMdEyaKN4XQmJsp1p7uVxaq2696REvQ\",\n\n    base: MAINNET_SPL_TOKENS.MEDIA,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.MEDIA.decimals,\n\n    version: 4,\n  },\n  ROPE_USDC_V4: {\n    symbol: \"ROPE-USDC\",\n    name: \"ROPE-USDC V4 LP\",\n    mint: \"Cq4HyW5xia37tKejPF2XfZeXQoPYW6KfbPvxvw5eRoUE\",\n\n    base: MAINNET_SPL_TOKENS.ROPE,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.ROPE.decimals,\n\n    version: 4,\n  },\n  MER_USDC_V4: {\n    symbol: \"MER-USDC\",\n    name: \"MER-USDC V4 LP\",\n    mint: \"3H9NxvaZoxMZZDZcbBDdWMKbrfNj7PCF5sbRwDr7SdDW\",\n\n    base: MAINNET_SPL_TOKENS.MER,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.MER.decimals,\n\n    version: 4,\n  },\n  COPE_USDC_V4: {\n    symbol: \"COPE-USDC\",\n    name: \"COPE-USDC V4 LP\",\n    mint: \"Cz1kUvHw98imKkrqqu95GQB9h1frY8RikxPojMwWKGXf\",\n\n    base: MAINNET_SPL_TOKENS.COPE,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.COPE.decimals,\n\n    version: 4,\n  },\n  ALEPH_USDC_V4: {\n    symbol: \"ALEPH-USDC\",\n    name: \"ALEPH-USDC V4 LP\",\n    mint: \"iUDasAP2nXm5wvTukAHEKSdSXn8vQkRtaiShs9ceGB7\",\n\n    base: MAINNET_SPL_TOKENS.ALEPH,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.ALEPH.decimals,\n\n    version: 4,\n  },\n  TULIP_USDC_V4: {\n    symbol: \"TULIP-USDC\",\n    name: \"TULIP-USDC V4 LP\",\n    mint: \"2doeZGLJyACtaG9DCUyqMLtswesfje1hjNA11hMdj6YU\",\n\n    base: MAINNET_SPL_TOKENS.TULIP,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.TULIP.decimals,\n\n    version: 4,\n  },\n  WOO_USDC_V4: {\n    symbol: \"WOO-USDC\",\n    name: \"WOO-USDC V4 LP\",\n    mint: \"7cu42ao8Jgrd5A3y3bNQsCxq5poyGZNmTydkGfJYQfzh\",\n\n    base: MAINNET_SPL_TOKENS.WOO,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.WOO.decimals,\n\n    version: 4,\n  },\n  SNY_USDC_V4: {\n    symbol: \"SNY-USDC\",\n    name: \"SNY-USDC V4 LP\",\n    mint: \"G8qcfeFqxwbCqpxv5LpLWxUCd1PyMB5nWb5e5YyxLMKg\",\n\n    base: MAINNET_SPL_TOKENS.SNY,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SNY.decimals,\n\n    version: 4,\n  },\n  BOP_RAY_V4: {\n    symbol: \"BOP-RAY\",\n    name: \"BOP-RAY V4 LP\",\n    mint: \"9nQPYJvysyfnXhQ6nkK5V7sZG26hmDgusfdNQijRk5LD\",\n\n    base: MAINNET_SPL_TOKENS.BOP,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.BOP.decimals,\n\n    version: 4,\n  },\n  SLRS_USDC_V4: {\n    symbol: \"SLRS-USDC\",\n    name: \"SLRS-USDC V4 LP\",\n    mint: \"2Xxbm1hdv5wPeen5ponDSMT3VqhGMTQ7mH9stNXm9shU\",\n\n    base: MAINNET_SPL_TOKENS.SLRS,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SLRS.decimals,\n\n    version: 4,\n  },\n  SAMO_RAY_V4: {\n    symbol: \"SAMO-RAY\",\n    name: \"SAMO-RAY V4 LP\",\n    mint: \"HwzkXyX8B45LsaHXwY8su92NoRBS5GQC32HzjQRDqPnr\",\n\n    base: MAINNET_SPL_TOKENS.SAMO,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.SAMO.decimals,\n\n    version: 4,\n  },\n  renBTC_USDC_V4: {\n    symbol: \"renBTC-USDC\",\n    name: \"renBTC-USDC V4 LP\",\n    mint: \"CTEpsih91ZLo5gunvryLpJ3pzMjmt5jbS6AnSQrzYw7V\",\n\n    base: MAINNET_SPL_TOKENS.renBTC,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.renBTC.decimals,\n\n    version: 4,\n  },\n  renDOGE_USDC_V4: {\n    symbol: \"renDOGE-USDC\",\n    name: \"renDOGE-USDC V4 LP\",\n    mint: \"Hb8KnZNKvRxu7pgMRWJgoMSMcepfvNiBFFDDrdf9o3wA\",\n\n    base: MAINNET_SPL_TOKENS.renDOGE,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.renDOGE.decimals,\n\n    version: 4,\n  },\n  RAY_USDC_V4: {\n    symbol: \"RAY-USDC\",\n    name: \"RAY-USDC V4 LP\",\n    mint: \"FbC6K13MzHvN42bXrtGaWsvZY9fxrackRSZcBGfjPc7m\",\n\n    base: MAINNET_SPL_TOKENS.RAY,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.RAY.decimals,\n\n    version: 4,\n  },\n  RAY_SRM_V4: {\n    symbol: \"RAY-SRM\",\n    name: \"RAY-SRM V4 LP\",\n    mint: \"7P5Thr9Egi2rvMmEuQkLn8x8e8Qro7u2U7yLD2tU2Hbe\",\n\n    base: MAINNET_SPL_TOKENS.RAY,\n    quote: MAINNET_SPL_TOKENS.SRM,\n    decimals: MAINNET_SPL_TOKENS.RAY.decimals,\n\n    version: 4,\n  },\n  RAY_ETH_V4: {\n    symbol: \"RAY-ETH\",\n    name: \"RAY-ETH V4 LP\",\n    mint: \"mjQH33MqZv5aKAbKHi8dG3g3qXeRQqq1GFcXceZkNSr\",\n\n    base: MAINNET_SPL_TOKENS.RAY,\n    quote: MAINNET_SPL_TOKENS.ETH,\n    decimals: MAINNET_SPL_TOKENS.RAY.decimals,\n\n    version: 4,\n  },\n  RAY_SOL_V4: {\n    symbol: \"RAY-SOL\",\n    name: \"RAY-SOL V4 LP\",\n    mint: \"89ZKE4aoyfLBe2RuV6jM3JGNhaV18Nxh8eNtjRcndBip\",\n\n    base: MAINNET_SPL_TOKENS.RAY,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.RAY.decimals,\n\n    version: 4,\n  },\n  DXL_USDC_V4: {\n    symbol: \"DXL-USDC\",\n    name: \"DXL-USDC V4 LP\",\n    mint: \"4HFaSvfgskipvrzT1exoVKsUZ174JyExEsA8bDfsAdY5\",\n\n    base: MAINNET_SPL_TOKENS.DXL,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.DXL.decimals,\n\n    version: 4,\n  },\n  LIKE_USDC_V4: {\n    symbol: \"LIKE-USDC\",\n    name: \"LIKE-USDC V4 LP\",\n    mint: \"cjZmbt8sJgaoyWYUttomAu5LJYU44ZrcKTbzTSEPDVw\",\n\n    base: MAINNET_SPL_TOKENS.LIKE,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.LIKE.decimals,\n\n    version: 4,\n  },\n  mSOL_USDC_V4: {\n    symbol: \"mSOL-USDC\",\n    name: \"mSOL-USDC V4 LP\",\n    mint: \"4xTpJ4p76bAeggXoYywpCCNKfJspbuRzZ79R7pRhbqSf\",\n\n    base: MAINNET_SPL_TOKENS.mSOL,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.mSOL.decimals,\n\n    version: 4,\n  },\n  mSOL_SOL_V4: {\n    symbol: \"mSOL-SOL\",\n    name: \"mSOL-SOL V4 LP\",\n    mint: \"5ijRoAHVgd5T5CNtK5KDRUBZ7Bffb69nktMj5n6ks6m4\",\n\n    base: MAINNET_SPL_TOKENS.mSOL,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.mSOL.decimals,\n\n    version: 4,\n  },\n  MER_PAI_V4: {\n    symbol: \"MER-PAI\",\n    name: \"MER-PAI V4 LP\",\n    mint: \"DU5RT2D9EviaSmX6Ta8MZwMm85HwSEqGMRdqUiuCGfmD\",\n\n    base: MAINNET_SPL_TOKENS.MER,\n    quote: MAINNET_SPL_TOKENS.PAI,\n    decimals: MAINNET_SPL_TOKENS.MER.decimals,\n\n    version: 4,\n  },\n  PORT_USDC_V4: {\n    symbol: \"PORT-USDC\",\n    name: \"PORT-USDC V4 LP\",\n    mint: \"9tmNtbUCrLS15qC4tEfr5NNeqcqpZ4uiGgi2vS5CLQBS\",\n\n    base: MAINNET_SPL_TOKENS.PORT,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.PORT.decimals,\n\n    version: 4,\n  },\n  MNGO_USDC_V4: {\n    symbol: \"MNGO-USDC\",\n    name: \"MNGO-USDC V4 LP\",\n    mint: \"DkiqCQ792n743xjWQVCbBUaVtkdiuvQeYndM53ReWnCC\",\n\n    base: MAINNET_SPL_TOKENS.MNGO,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.MNGO.decimals,\n\n    version: 4,\n  },\n  ATLAS_USDC_V4: {\n    symbol: \"ATLAS-USDC\",\n    name: \"ATLAS-USDC V4 LP\",\n    mint: \"9shGU9f1EsxAbiR567MYZ78WUiS6ZNCYbHe53WUULQ7n\",\n\n    base: MAINNET_SPL_TOKENS.ATLAS,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.ATLAS.decimals,\n\n    version: 4,\n  },\n  POLIS_USDC_V4: {\n    symbol: \"POLIS-USDC\",\n    name: \"POLIS-USDC V4 LP\",\n    mint: \"8MbKSBpyXs8fVneKgt71jfHrn5SWtX8n4wMLpiVfF9So\",\n\n    base: MAINNET_SPL_TOKENS.POLIS,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.POLIS.decimals,\n\n    version: 4,\n  },\n  ATLAS_RAY_V4: {\n    symbol: \"ATLAS-RAY\",\n    name: \"ATLAS-RAY V4 LP\",\n    mint: \"418MFhkaYQtbn529wmjLLqL6uKxDz7j4eZBaV1cobkyd\",\n\n    base: MAINNET_SPL_TOKENS.ATLAS,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.ATLAS.decimals,\n\n    version: 4,\n  },\n  POLIS_RAY_V4: {\n    symbol: \"POLIS-RAY\",\n    name: \"POLIS-RAY V4 LP\",\n    mint: \"9ysGKUH6WqzjQEUT4dxqYCUaFNVK9QFEa24pGzjFq8xg\",\n\n    base: MAINNET_SPL_TOKENS.POLIS,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.POLIS.decimals,\n\n    version: 4,\n  },\n  ALEPH_RAY_V4: {\n    symbol: \"ALEPH-RAY\",\n    name: \"ALEPH-RAY V4 LP\",\n    mint: \"n76skjqv4LirhdLok2zJELXNLdRpYDgVJQuQFbamscy\",\n\n    base: MAINNET_SPL_TOKENS.ALEPH,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.ALEPH.decimals,\n\n    version: 4,\n  },\n  TULIP_RAY_V4: {\n    symbol: \"TULIP-RAY\",\n    name: \"TULIP-RAY V4 LP\",\n    mint: \"3AZTviji5qduMG2s4FfWGR3SSQmNUCyx8ao6UKCPg3oJ\",\n\n    base: MAINNET_SPL_TOKENS.TULIP,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.TULIP.decimals,\n\n    version: 4,\n  },\n  SLRS_RAY_V4: {\n    symbol: \"SLRS-RAY\",\n    name: \"SLRS-RAY V4 LP\",\n    mint: \"2pk78vsKT3jfJAcN2zbpMUnrR57SZrxHqaZYyFgp92mM\",\n\n    base: MAINNET_SPL_TOKENS.SLRS,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.SLRS.decimals,\n\n    version: 4,\n  },\n  MER_RAY_V4: {\n    symbol: \"MER-RAY\",\n    name: \"MER-RAY V4 LP\",\n    mint: \"214hxy3AbKoaEKgqcg2aC1cP5R67cGGAyDEg5GDwC7Ub\",\n\n    base: MAINNET_SPL_TOKENS.MER,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.MER.decimals,\n\n    version: 4,\n  },\n  MEDIA_RAY_V4: {\n    symbol: \"MEDIA-RAY\",\n    name: \"MEDIA-RAY V4 LP\",\n    mint: \"9Aseg5A1JD1yCiFFdDaNNxCiJ7XzrpZFmcEmLjXFdPaH\",\n\n    base: MAINNET_SPL_TOKENS.MEDIA,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.MEDIA.decimals,\n\n    version: 4,\n  },\n  SNY_RAY_V4: {\n    symbol: \"SNY-RAY\",\n    name: \"SNY-RAY V4 LP\",\n    mint: \"2k4quTuuLUxrSEhFH99qcoZzvgvVEc3b5sz3xz3qstfS\",\n\n    base: MAINNET_SPL_TOKENS.SNY,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.SNY.decimals,\n\n    version: 4,\n  },\n  LIKE_RAY_V4: {\n    symbol: \"LIKE-RAY\",\n    name: \"LIKE-RAY V4 LP\",\n    mint: \"7xqDycbFSCpUpzkYapFeyPJWPwEpV7zdWbYf2MVHTNjv\",\n\n    base: MAINNET_SPL_TOKENS.LIKE,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.LIKE.decimals,\n\n    version: 4,\n  },\n  COPE_RAY_V4: {\n    symbol: \"COPE-RAY\",\n    name: \"COPE-RAY V4 LP\",\n    mint: \"A7GCVHA8NSsbdFscHdoNU41tL1TRKNmCH4K94CgcLK9F\",\n\n    base: MAINNET_SPL_TOKENS.COPE,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.COPE.decimals,\n\n    version: 4,\n  },\n  ETH_SOL_V4: {\n    symbol: \"ETH-SOL\",\n    name: \"ETH-SOL V4 LP\",\n    mint: \"GKfgC86iJoMjwAtcyiLu6nWnjggqUXsDQihXkP14fDez\",\n\n    base: MAINNET_SPL_TOKENS.ETH,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.ETH.decimals,\n\n    version: 4,\n  },\n  stSOL_USDC_V4: {\n    symbol: \"stSOL-USDC\",\n    name: \"stSOL-USDC V4 LP\",\n    mint: \"HDUJMwYZkjUZre63xUeDhdCi8c6LgUDiBqxmP3QC3VPX\",\n\n    base: MAINNET_SPL_TOKENS.stSOL,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.stSOL.decimals,\n\n    version: 4,\n  },\n  GRAPE_USDC_V4: {\n    symbol: \"GRAPE-USDC\",\n    name: \"GRAPE-USDC V4 LP\",\n    mint: \"A8ZYmnZ1vwxUa4wpJVUaJgegsuTEz5TKy5CiJXffvmpt\",\n\n    base: MAINNET_SPL_TOKENS.GRAPE,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.GRAPE.decimals,\n\n    version: 4,\n  },\n  LARIX_USDC_V4: {\n    symbol: \"LARIX-USDC\",\n    name: \"LARIX-USDC V4 LP\",\n    mint: \"7yieit4YsNsZ9CAK8H5ZEMvvk35kPEHHeXwp6naoWU9V\",\n\n    base: MAINNET_SPL_TOKENS.LARIX,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.LARIX.decimals,\n\n    version: 4,\n  },\n  RIN_USDC_V4: {\n    symbol: \"RIN-USDC\",\n    name: \"RIN-USDC V4 LP\",\n    mint: \"GfCWfrZez7BDmCSEeMERVDVUaaM2TEreyYUgb2cpuS3w\",\n\n    base: MAINNET_SPL_TOKENS.RIN,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.RIN.decimals,\n\n    version: 4,\n  },\n  APEX_USDC_V4: {\n    symbol: \"APEX-USDC\",\n    name: \"APEX-USDC V4 LP\",\n    mint: \"444cVqYyDxJNo6FqiMb9qQWFUd7tYzFRdDuJRFrSAGnU\",\n\n    base: MAINNET_SPL_TOKENS.APEX,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.APEX.decimals,\n\n    version: 4,\n  },\n  mSOL_RAY_V4: {\n    symbol: \"mSOL-RAY\",\n    name: \"mSOL-RAY V4 LP\",\n    mint: \"De2EHBAdkgfc72DpShqDGG42cV3iDWh8wvvZdPsiEcqP\",\n\n    base: MAINNET_SPL_TOKENS.mSOL,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.mSOL.decimals,\n\n    version: 4,\n  },\n  MNDE_mSOL_V4: {\n    symbol: \"MNDE-mSOL\",\n    name: \"MNDE-mSOL V4 LP\",\n    mint: \"4bh8XCzTHSbqbWN8o1Jn4ueBdz1LvJFoEasN6K6CQ8Ny\",\n\n    base: MAINNET_SPL_TOKENS.MNDE,\n    quote: MAINNET_SPL_TOKENS.mSOL,\n    decimals: MAINNET_SPL_TOKENS.MNDE.decimals,\n\n    version: 4,\n  },\n  LARIX_RAY_V4: {\n    symbol: \"LARIX-RAY\",\n    name: \"LARIX-RAY V4 LP\",\n    mint: \"ZRDfSLgWGeaYSmhdPvFNKQQhDcYdZQaue2N8YDmHX4q\",\n\n    base: MAINNET_SPL_TOKENS.LARIX,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.LARIX.decimals,\n\n    version: 4,\n  },\n  LIQ_USDC_V4: {\n    symbol: \"LIQ-USDC\",\n    name: \"LIQ-USDC V4 LP\",\n    mint: \"GWpD3eTfhJB5KDCcnE85dBQrjAk2CsrgDF9b52R9CrjV\",\n\n    base: MAINNET_SPL_TOKENS.LIQ,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.LIQ.decimals,\n\n    version: 4,\n  },\n  WAG_USDC_V4: {\n    symbol: \"WAG-USDC\",\n    name: \"WAG-USDC V4 LP\",\n    mint: \"4yykyPugitUVRewNPXXCviRvxGfsfsRMoP32z3b6FmUC\",\n\n    base: MAINNET_SPL_TOKENS.WAG,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.WAG.decimals,\n\n    version: 4,\n  },\n  ETH_mSOL_V4: {\n    symbol: \"ETH-mSOL\",\n    name: \"ETH-mSOL V4 LP\",\n    mint: \"HYv3grQfi8QbV7nG7EFgNK1aJSrsJ7HynXJKJVPLL2Uh\",\n\n    base: MAINNET_SPL_TOKENS.ETH,\n    quote: MAINNET_SPL_TOKENS.mSOL,\n    decimals: MAINNET_SPL_TOKENS.ETH.decimals,\n\n    version: 4,\n  },\n  mSOL_USDT_V4: {\n    symbol: \"mSOL-USDT\",\n    name: \"mSOL-USDT V4 LP\",\n    mint: \"69NCmEW9mGpiWLjAcAWHq51k4ionJZmzgRfRT3wQaCCf\",\n\n    base: MAINNET_SPL_TOKENS.mSOL,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.mSOL.decimals,\n\n    version: 4,\n  },\n  BTC_mSOL_V4: {\n    symbol: \"BTC-mSOL\",\n    name: \"BTC-mSOL V4 LP\",\n    mint: \"92bcERNtUmuaJ6mwLSxYHZYSph37jdKxRdoYNxpcYNPp\",\n\n    base: MAINNET_SPL_TOKENS.BTC,\n    quote: MAINNET_SPL_TOKENS.mSOL,\n    decimals: MAINNET_SPL_TOKENS.BTC.decimals,\n\n    version: 4,\n  },\n  SLIM_SOL_V4: {\n    symbol: \"SLIM-SOL\",\n    name: \"SLIM-SOL V4 LP\",\n    mint: \"9X4EK8E59VAVi6ChnNvvd39m6Yg9RtkBbAPq1mDVJT57\",\n\n    base: MAINNET_SPL_TOKENS.SLIM,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.SLIM.decimals,\n\n    version: 4,\n  },\n  AURY_USDC_V4: {\n    symbol: \"AURY-USDC\",\n    name: \"AURY-USDC V4 LP\",\n    mint: \"Gub5dvTy4nzP82qpmpNkBxmRqjtqRddBTBqHSdNcf2oS\",\n\n    base: MAINNET_SPL_TOKENS.AURY,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.AURY.decimals,\n\n    version: 4,\n  },\n  PRT_SOL_V4: {\n    symbol: \"PRT-SOL\",\n    name: \"PRT-SOL V4 LP\",\n    mint: \"EcJ8Wgwt1AzSPiDpVr6aaSur8TKAsNTPmmzRACeqT68Z\",\n\n    base: MAINNET_SPL_TOKENS.PRT,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.PRT.decimals,\n\n    version: 4,\n  },\n  LIQ_RAY_V4: {\n    symbol: \"LIQ-RAY\",\n    name: \"LIQ-RAY V4 LP\",\n    mint: \"49YUsDrThJosHSagCn1F59Uc9NRxbr9thVrZikUnQDXy\",\n\n    base: MAINNET_SPL_TOKENS.LIQ,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.LIQ.decimals,\n\n    version: 4,\n  },\n  SYP_SOL_V4: {\n    symbol: \"SYP-SOL\",\n    name: \"SYP-SOL V4 LP\",\n    mint: \"KHV6dfj2bDntzJ9z1S26cDfqWfUZdJRFmteLR6LxHwW\",\n\n    base: MAINNET_SPL_TOKENS.SYP,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.SYP.decimals,\n\n    version: 4,\n  },\n  SYP_RAY_V4: {\n    symbol: \"SYP-RAY\",\n    name: \"SYP-RAY V4 LP\",\n    mint: \"FT2KZqxxM8F2h9pZtTF4PyjK88bM4YbuBzd7ZPwQ5wMB\",\n\n    base: MAINNET_SPL_TOKENS.SYP,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.SYP.decimals,\n\n    version: 4,\n  },\n  SYP_USDC_V4: {\n    symbol: \"SYP-USDC\",\n    name: \"SYP-USDC V4 LP\",\n    mint: \"2xJGuLAivAR1WkARRA6zP1v4jaA9jV2Qis8JfMNvrVyZ\",\n\n    base: MAINNET_SPL_TOKENS.SYP,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SYP.decimals,\n\n    version: 4,\n  },\n  FAB_USDC_V4: {\n    symbol: \"FAB-USDC\",\n    name: \"FAB-USDC V4 LP\",\n    mint: \"5rTCvZq6BcApsC3VV1EEUuTJfaVd8uYhcGjwTy1By6P8\",\n\n    base: MAINNET_SPL_TOKENS.FAB,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.FAB.decimals,\n\n    version: 4,\n  },\n  WOOF_RAY_V4: {\n    symbol: \"WOOF-RAY\",\n    name: \"WOOF-RAY V4 LP\",\n    mint: \"H2FAnazDaGFutcmnrwDxhmdncR1Bd7GG4mhPCSUiamDX\",\n\n    base: MAINNET_SPL_TOKENS.WOOF,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.WOOF.decimals,\n\n    version: 4,\n  },\n  WOOF_USDC_V4: {\n    symbol: \"WOOF-USDC\",\n    name: \"WOOF-USDC V4 LP\",\n    mint: \"EFSu5TMc1ijRevaYCxUkS7uGvbhsymDHEaTK3UVdNE3q\",\n\n    base: MAINNET_SPL_TOKENS.WOOF,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.WOOF.decimals,\n\n    version: 4,\n  },\n  SLND_USDC_V4: {\n    symbol: \"SLND-USDC\",\n    name: \"SLND-USDC V4 LP\",\n    mint: \"EunE9uDh2cGsyJcsGuGKc6wte7kBn8iye2gzC4w2ePHn\",\n\n    base: MAINNET_SPL_TOKENS.SLND,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SLND.decimals,\n\n    version: 4,\n  },\n  FRKT_SOL_V4: {\n    symbol: \"FRKT-SOL\",\n    name: \"FRKT-SOL V4 LP\",\n    mint: \"HYUKXgpjaxMXHttyrFYtv3z2rdhZ1U9QDH8zEc8BooQC\",\n\n    base: MAINNET_SPL_TOKENS.FRKT,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.FRKT.decimals,\n\n    version: 4,\n  },\n  weWETH_SOL_V4: {\n    symbol: \"weWETH-SOL\",\n    name: \"weWETH-SOL V4 LP\",\n    mint: \"3hbozt2Por7bcrGod8N7kEeJNMocFFjCJrQR16TQGBrE\",\n\n    base: MAINNET_SPL_TOKENS.weWETH,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.weWETH.decimals,\n\n    version: 4,\n  },\n  weWETH_USDC_V4: {\n    symbol: \"weWETH-USDC\",\n    name: \"weWETH-USDC V4 LP\",\n    mint: \"3529SBnMCDW3S3xQ52aABbRHo7PcHvpQA4no8J12L5eK\",\n\n    base: MAINNET_SPL_TOKENS.weWETH,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.weWETH.decimals,\n\n    version: 4,\n  },\n  weUNI_USDC_V4: {\n    symbol: \"weUNI-USDC\",\n    name: \"weUNI-USDC V4 LP\",\n    mint: \"EEC4QnT41py39QaYnzQnoYQEtDUDNa6Se8SBDgfPSN2a\",\n\n    base: MAINNET_SPL_TOKENS.weUNI,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.weUNI.decimals,\n\n    version: 4,\n  },\n  weSUSHI_USDC_V4: {\n    symbol: \"weSUSHI-USDC\",\n    name: \"weSUSHI-USDC V4 LP\",\n    mint: \"3wVrtQZsiDNp5yTPyfEzQHPU6iuJoMmpnWg6CTt4V8sR\",\n\n    base: MAINNET_SPL_TOKENS.weSUSHI,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.weSUSHI.decimals,\n\n    version: 4,\n  },\n  CYS_USDC_V4: {\n    symbol: \"CYS-USDC\",\n    name: \"CYS-USDC V4 LP\",\n    mint: \"GfV3QDzzdVUwCNSdfn6PjhmyJvjw18tn51RingWZYwk3\",\n\n    base: MAINNET_SPL_TOKENS.CYS,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.CYS.decimals,\n\n    version: 4,\n  },\n  SAMO_USDC_V4: {\n    symbol: \"SAMO-USDC\",\n    name: \"SAMO-USDC V4 LP\",\n    mint: \"B2PjGEP3vPf1999fUD14pYdxvSDRVBk43hxB2rgthwEY\",\n\n    base: MAINNET_SPL_TOKENS.SAMO,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SAMO.decimals,\n\n    version: 4,\n  },\n  ABR_USDC_V4: {\n    symbol: \"ABR-USDC\",\n    name: \"ABR-USDC V4 LP\",\n    mint: \"ECHfxkf5zjjZFTX95QfFahNyzG7feyEKcfTdjsdrMSGU\",\n\n    base: MAINNET_SPL_TOKENS.ABR,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.ABR.decimals,\n\n    version: 4,\n  },\n  IN_USDC_V4: {\n    symbol: \"IN-USDC\",\n    name: \"IN-USDC V4 LP\",\n    mint: \"GbmJtVgg9fRmmmjKUYGMZeSt8wZ47cDDXasg5Y3iF4kz\",\n\n    base: MAINNET_SPL_TOKENS.IN,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.IN.decimals,\n\n    version: 4,\n  },\n  weDYDX_USDC_V4: {\n    symbol: \"weDYDX-USDC\",\n    name: \"weDYDX-USDC V4 LP\",\n    mint: \"BjkkMZnnzmgLqzGErzDbkk15ozv48iVKQuunpeM2Hqnk\",\n\n    base: MAINNET_SPL_TOKENS.weDYDX,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.weDYDX.decimals,\n\n    version: 4,\n  },\n  STARS_USDC_V4: {\n    symbol: \"STARS-USDC\",\n    name: \"STARS-USDC V4 LP\",\n    mint: \"FJ68q7NChhETcGVdinMbM2FF1Cy79dpmUi6HC83K55Hv\",\n\n    base: MAINNET_SPL_TOKENS.STARS,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.STARS.decimals,\n\n    version: 4,\n  },\n  weAXS_USDC_V4: {\n    symbol: \"weAXS-USDC\",\n    name: \"weAXS-USDC V4 LP\",\n    mint: \"6PSoJQ7myQ1BJtbQC6oiWR8HSecQGyoWsPYTZRJo2ci3\",\n\n    base: MAINNET_SPL_TOKENS.weAXS,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.weAXS.decimals,\n\n    version: 4,\n  },\n  weSHIB_USDC_V4: {\n    symbol: \"weSHIB-USDC\",\n    name: \"weSHIB-USDC V4 LP\",\n    mint: \"AcjX5pmTMGSgxkdxc3r82r6WMKBvS6eQXXFz5ck5KKUa\",\n\n    base: MAINNET_SPL_TOKENS.weSHIB,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.weSHIB.decimals,\n\n    version: 4,\n  },\n  SBR_USDC_V4: {\n    symbol: \"SBR-USDC\",\n    name: \"SBR-USDC V4 LP\",\n    mint: \"9FC8xTFRbgTpuZZYAYnZLxgnQ8r7FwfSBM1SWvGwgF7s\",\n\n    base: MAINNET_SPL_TOKENS.SBR,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SBR.decimals,\n\n    version: 4,\n  },\n  OXS_USDC_V4: {\n    symbol: \"OXS-USDC\",\n    name: \"OXS-USDC V4 LP\",\n    mint: \"et9pdjWm97rbmsJoN183GkFV5qzTGru79GE1Zhe7NTU\",\n\n    base: MAINNET_SPL_TOKENS.OXS,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.OXS.decimals,\n\n    version: 4,\n  },\n  CWAR_USDC_V4: {\n    symbol: \"CWAR-USDC\",\n    name: \"CWAR-USDC V4 LP\",\n    mint: \"HjR23bxn2gtRDB2P1Tm3DLepAPPZgazsWJpLG9wqjnYR\",\n\n    base: MAINNET_SPL_TOKENS.CWAR,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.CWAR.decimals,\n\n    version: 4,\n  },\n  UPS_USDC_V4: {\n    symbol: \"UPS-USDC\",\n    name: \"UPS-USDC V4 LP\",\n    mint: \"9hSUZdREEsbaYaKY4FouvXr7xyAqtpdHRDoYCb6Mb28a\",\n\n    base: MAINNET_SPL_TOKENS.UPS,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.UPS.decimals,\n\n    version: 4,\n  },\n  weSAND_USDC_V4: {\n    symbol: \"weSAND-USDC\",\n    name: \"weSAND-USDC V4 LP\",\n    mint: \"3dADrQa7utyiCsaFeVk9r7oebW1WheowhKo5soBYKBVT\",\n\n    base: MAINNET_SPL_TOKENS.weSAND,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.weSAND.decimals,\n\n    version: 4,\n  },\n  weMANA_USDC_V4: {\n    symbol: \"weMANA-USDC\",\n    name: \"weMANA-USDC V4 LP\",\n    mint: \"HpUkVAPRJ5zNRuJ1ZwMXEhbMHL3gSuPb2QuSER9YUd3a\",\n\n    base: MAINNET_SPL_TOKENS.weMANA,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.weMANA.decimals,\n\n    version: 4,\n  },\n  CAVE_USDC_V4: {\n    symbol: \"CAVE-USDC\",\n    name: \"CAVE-USDC V4 LP\",\n    mint: \"5Gba1k3fU7Vh7UtAiBmie9vhQNNq1JfEwgn1DPGZ7NKQ\",\n\n    base: MAINNET_SPL_TOKENS.CAVE,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.CAVE.decimals,\n\n    version: 4,\n  },\n  GENE_USDC_V4: {\n    symbol: \"GENE-USDC\",\n    name: \"GENE-USDC V4 LP\",\n    mint: \"7GKvfHEXenNiWYbJBKae89mdaMPr5gGMYwZmyC8gBNVG\",\n\n    base: MAINNET_SPL_TOKENS.GENE,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.GENE.decimals,\n\n    version: 4,\n  },\n  GENE_RAY_V4: {\n    symbol: \"GENE-RAY\",\n    name: \"GENE-RAY V4 LP\",\n    mint: \"3HzXnc1qZ8mGqun18Ck3KA616XnZNqF1RWbgYE2nGRMA\",\n\n    base: MAINNET_SPL_TOKENS.GENE,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.GENE.decimals,\n\n    version: 4,\n  },\n  APT_USDC_V4: {\n    symbol: \"APT-USDC\",\n    name: \"APT-USDC V4 LP\",\n    mint: \"Hk8mDAJFq4E9kF3DtNgPFwzbo5kbeiusNFJgWmo3LoQ5\",\n\n    base: MAINNET_SPL_TOKENS.APT,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.APT.decimals,\n\n    version: 4,\n  },\n  GOFX_USDC_V4: {\n    symbol: \"GOFX-USDC\",\n    name: \"GOFX-USDC V4 LP\",\n    mint: \"4svqAwrLPGRDCQuuieYTmtLXF75wiahjeK2rEN9tY1YL\",\n\n    base: MAINNET_SPL_TOKENS.GOFX,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.GOFX.decimals,\n\n    version: 4,\n  },\n  SONAR_USDC_V4: {\n    symbol: \"SONAR-USDC\",\n    name: \"SONAR-USDC V4 LP\",\n    mint: \"2tAcfqJ1YYjpGLqwh76kyNt9VaNFDd4fJySfH6SmWfKt\",\n\n    base: MAINNET_SPL_TOKENS.SONAR,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SONAR.decimals,\n\n    version: 4,\n  },\n  JSOL_SOL_V4: {\n    symbol: \"JSOL-SOL\",\n    name: \"JSOL-SOL V4 LP\",\n    mint: \"61z37rpHsU6d3Fq5sUjJ85K6tXGzkoYKDAG3kPJQNDRo\",\n\n    base: MAINNET_SPL_TOKENS.JSOL,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.JSOL.decimals,\n\n    version: 4,\n  },\n  JSOL_USDC_V4: {\n    symbol: \"JSOL-USDC\",\n    name: \"JSOL-USDC V4 LP\",\n    mint: \"3JZqf2VPNxj1kDZQsfzC7myM6spsGQbGuFv1gVfdYosN\",\n\n    base: MAINNET_SPL_TOKENS.JSOL,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.JSOL.decimals,\n\n    version: 4,\n  },\n  SHILL_USDC_V4: {\n    symbol: \"SHILL-USDC\",\n    name: \"SHILL-USDC V4 LP\",\n    mint: \"CnUhYBtQEbSBZ76bgxAouVCTCb8rofZzwerVF5z5LREJ\",\n\n    base: MAINNET_SPL_TOKENS.SHILL,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SHILL.decimals,\n\n    version: 4,\n  },\n  DFL_USDC_V4: {\n    symbol: \"DFL-USDC\",\n    name: \"DFL-USDC V4 LP\",\n    mint: \"Fffijd6UVJdQeLVXhenS8YcsnMUdWJqpbBeH42LFkXgS\",\n\n    base: MAINNET_SPL_TOKENS.DFL,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.DFL.decimals,\n\n    version: 4,\n  },\n  BOKU_USDC_V4: {\n    symbol: \"BOKU-USDC\",\n    name: \"BOKU-USDC V4 LP\",\n    mint: \"8jjQn5Yagb6Nm2WGAxPW1bcGqrTWpg5adf6QukXEarcP\",\n\n    base: MAINNET_SPL_TOKENS.BOKU,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.BOKU.decimals,\n\n    version: 4,\n  },\n  MIMO_SOL_V4: {\n    symbol: \"MIMO-SOL\",\n    name: \"MIMO-SOL V4 LP\",\n    mint: \"HUJ1opSk8AiPfDT47r7n4hTiK2EXgrR3Msy7T8q1BywS\",\n\n    base: MAINNET_SPL_TOKENS.MIMO,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.MIMO.decimals,\n\n    version: 4,\n  },\n  wbWBNB_USDC_V4: {\n    symbol: \"wbWBNB-USDC\",\n    name: \"wbWBNB-USDC V4 LP\",\n    mint: \"FEsEfEJJSfiMQcshUgZ5UigfytfGRQ3z5puyF6DXDp9C\",\n\n    base: MAINNET_SPL_TOKENS.wbWBNB,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.wbWBNB.decimals,\n\n    version: 4,\n  },\n  wePEOPLE_USDC_V4: {\n    symbol: \"wePEOPLE-USDC\",\n    name: \"wePEOPLE-USDC V4 LP\",\n    mint: \"3e5ZCKi4etorpV4pv1fSckP5iJD67xcUkx3RtFCZhbzD\",\n\n    base: MAINNET_SPL_TOKENS.wePEOPLE,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.wePEOPLE.decimals,\n\n    version: 4,\n  },\n  ISOLA_USDT_V4: {\n    symbol: \"ISOLA-USDT\",\n    name: \"ISOLA-USDT V4 LP\",\n    mint: \"H8s1wQsZpRK61pyLF3XwyQc6E8vNUnwRDhy3TBDCDENQ\",\n\n    base: MAINNET_SPL_TOKENS.ISOLA,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.ISOLA.decimals,\n\n    version: 4,\n  },\n  SPWN_USDC_V4: {\n    symbol: \"SPWN-USDC\",\n    name: \"SPWN-USDC V4 LP\",\n    mint: \"B5uyCAQcX6nAjZypLgiivbEKabSptgUb8JK9tkaSnqdW\",\n\n    base: MAINNET_SPL_TOKENS.SPWN,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SPWN.decimals,\n\n    version: 4,\n  },\n  STR_USDC_V4: {\n    symbol: \"STR-USDC\",\n    name: \"STR-USDC V4 LP\",\n    mint: \"8uDVKmVwNmbXHDB7rNKqtpcT9VAsFHTJ5pPYxjyoBbNg\",\n\n    base: MAINNET_SPL_TOKENS.STR,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.STR.decimals,\n\n    version: 4,\n  },\n  SOLC_USDT_V4: {\n    symbol: \"SOLC-USDT\",\n    name: \"SOLC-USDT V4 LP\",\n    mint: \"2g9JzTWycLzK4KEBBHsponAtZRee2ii63bRrJ8tefEyt\",\n\n    base: MAINNET_SPL_TOKENS.SOLC,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.SOLC.decimals,\n\n    version: 4,\n  },\n  VI_USDC_V4: {\n    symbol: \"VI-USDC\",\n    name: \"VI-USDC V4 LP\",\n    mint: \"3MwHyHCRfVqtH3ABFtdKXdY9dwemr9GGxQFaBkeq6NjY\",\n\n    base: MAINNET_SPL_TOKENS.VI,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.VI.decimals,\n\n    version: 4,\n  },\n  KKO_USDC_V4: {\n    symbol: \"KKO-USDC\",\n    name: \"KKO-USDC V4 LP\",\n    mint: \"7xr1Doc1NiMWbUg99YVFqQSLfYXNzo6YvacXUsSgBMNW\",\n\n    base: MAINNET_SPL_TOKENS.KKO,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.KKO.decimals,\n\n    version: 4,\n  },\n  XTAG_USDC_V4: {\n    symbol: \"XTAG-USDC\",\n    name: \"XTAG-USDC V4 LP\",\n    mint: \"GCEQbLg4ik5YJ4CMcbtuVqEc4sjLdSGy34rFk1CtGjdg\",\n\n    base: MAINNET_SPL_TOKENS.XTAG,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.XTAG.decimals,\n\n    version: 4,\n  },\n  TTT_USDC_V4: {\n    symbol: \"TTT-USDC\",\n    name: \"TTT-USDC V4 LP\",\n    mint: \"84fmrerHGohoRf4iLPDQ1KG4CjSjCRksYWGzjWfCRM8a\",\n\n    base: MAINNET_SPL_TOKENS.TTT,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.TTT.decimals,\n\n    version: 4,\n  },\n  RUN_USDC_V4: {\n    symbol: \"RUN-USDC\",\n    name: \"RUN-USDC V4 LP\",\n    mint: \"CjTLvvKSQdEujcSzeZRYgk4w1DpuXBbMppLHaxZyz11Y\",\n\n    base: MAINNET_SPL_TOKENS.RUN,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.RUN.decimals,\n\n    version: 4,\n  },\n  CRWNY_USDC_V4: {\n    symbol: \"CRWNY-USDC\",\n    name: \"CRWNY-USDC V4 LP\",\n    mint: \"H3D9Gyi4frRLW6bS9vBthDVDJyzyRJ6XhhpP6PJGWaDC\",\n\n    base: MAINNET_SPL_TOKENS.CRWNY,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.CRWNY.decimals,\n\n    version: 4,\n  },\n  CRWNY_RAY_V4: {\n    symbol: \"CRWNY-RAY\",\n    name: \"CRWNY-RAY V4 LP\",\n    mint: \"5Cz9wGStNjiUg81q8t6sJJeckuT2C14CYSfyQbtYirSX\",\n\n    base: MAINNET_SPL_TOKENS.CRWNY,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.CRWNY.decimals,\n\n    version: 4,\n  },\n  BLOCK_USDC_V4: {\n    symbol: \"BLOCK-USDC\",\n    name: \"BLOCK-USDC V4 LP\",\n    mint: \"8i44Y23GkkwDYZ5iSkVEqmrXUfwNmwo9grguTDWKM8wg\",\n\n    base: MAINNET_SPL_TOKENS.BLOCK,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.BLOCK.decimals,\n\n    version: 4,\n  },\n  REAL_USDC_V4: {\n    symbol: \"REAL-USDC\",\n    name: \"REAL-USDC V4 LP\",\n    mint: \"EN43tp8xdkcM8RYSJ4msFHMPTJRXKhUteVYBDJLwTvr3\",\n\n    base: MAINNET_SPL_TOKENS.REAL,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.REAL.decimals,\n\n    version: 4,\n  },\n  FRKT_USDC_V4: {\n    symbol: \"FRKT-USDC\",\n    name: \"FRKT-USDC V4 LP\",\n    mint: \"7MgzqVTGeA4wENme81QPTrPy45NJMKVL9XGwxmNT87cG\",\n\n    base: MAINNET_SPL_TOKENS.FRKT,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.FRKT.decimals,\n\n    version: 4,\n  },\n  MBS_USDC_V4: {\n    symbol: \"MBS-USDC\",\n    name: \"MBS-USDC V4 LP\",\n    mint: \"BAgSWaPZpsQKyZJdvB5KyvmCNj6hzczzentt5FhDCVHb\",\n\n    base: MAINNET_SPL_TOKENS.MBS,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.MBS.decimals,\n\n    version: 4,\n  },\n  PRISM_USDC_V4: {\n    symbol: \"PRISM-USDC\",\n    name: \"PRISM-USDC V4 LP\",\n    mint: \"3baYkTcudvSFMe25UpZcBfdp4FA5kL2E4pfaeJ8AiYJB\",\n\n    base: MAINNET_SPL_TOKENS.PRISM,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.PRISM.decimals,\n\n    version: 4,\n  },\n  CHICKS_USDC_V4: {\n    symbol: \"CHICKS-USDC\",\n    name: \"CHICKS-USDC V4 LP\",\n    mint: \"CPzmcw81a6PDasSXhVLfDRKuTJXZPUqocS9VFf5zCFhs\",\n\n    base: MAINNET_SPL_TOKENS.CHICKS,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.CHICKS.decimals,\n\n    version: 4,\n  },\n  MEAN_RAY_V4: {\n    symbol: \"MEAN-RAY\",\n    name: \"MEAN-RAY V4 LP\",\n    mint: \"H9wUyrxpAErmdNVPitpHSXgwoomoh91ggJKPWtQQoCn1\",\n\n    base: MAINNET_SPL_TOKENS.MEAN,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.MEAN.decimals,\n\n    version: 4,\n  },\n  TINY_USDC_V4: {\n    symbol: \"TINY-USDC\",\n    name: \"TINY-USDC V4 LP\",\n    mint: \"Hho6ZzRDj49L4z6zog8nQZFaxMSz6FX6wNzVpMeAMen\",\n\n    base: MAINNET_SPL_TOKENS.TINY,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.TINY.decimals,\n\n    version: 4,\n  },\n  SCY_USDC_V4: {\n    symbol: \"SCY-USDC\",\n    name: \"SCY-USDC V4 LP\",\n    mint: \"EcYk7t6Vw59HDnY2u6H1KDPkk8juMeA1NpGpHiGk1LDf\",\n\n    base: MAINNET_SPL_TOKENS.SCY,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SCY.decimals,\n\n    version: 4,\n  },\n};\n","import { WSOL } from \"./sol\";\nimport { LpTokens, SplTokens } from \"./type\";\n\nexport const DEVNET_SPL_TOKENS: SplTokens = {\n  *[Symbol.iterator]() {\n    yield* Object.values(this);\n  },\n  WSOL: { ...WSOL },\n};\n\nexport const DEVNET_LP_TOKENS: LpTokens = {\n  *[Symbol.iterator]() {\n    yield* Object.values(this);\n  },\n};\n","import { WSOL } from \"./sol\";\nimport { LpTokens, SplTokens } from \"./type\";\n\nexport const TESTNET_SPL_TOKENS: SplTokens = {\n  *[Symbol.iterator]() {\n    yield* Object.values(this);\n  },\n  WSOL: { ...WSOL },\n};\n\nexport const TESTNET_LP_TOKENS: LpTokens = {\n  *[Symbol.iterator]() {\n    yield* Object.values(this);\n  },\n};\n","import { Logger } from \"../common\";\n\nimport { LpTokenInfo, SplTokenInfo } from \"./type\";\n\nconst logger = Logger.from(\"token/util\");\n\n/**\n * Token list\n */\nexport class TokenList {\n  constructor(private tokenList: (SplTokenInfo | LpTokenInfo)[]) {}\n\n  /**\n   * Filter token by mint of token list.\n   *\n   * @param mint - Token's mint address\n   */\n  filterByMint = (mint: string) => {\n    return this.tokenList.filter((token) => token.mint === mint);\n  };\n\n  /**\n   * Filter unique token by mint of token list, must and can only have one result.\n   */\n  filterUniqueByMint = <T extends \"all\" | \"spl\" | \"lp\">(mint: string, tokenType: T | \"all\" | \"spl\" | \"lp\" = \"all\") => {\n    const result = this.tokenList.filter((token) => token.mint === mint);\n\n    if (result.length === 0) {\n      return logger.throwArgumentError(`No token found`, \"mint\", mint);\n    } else if (result.length > 1) {\n      return logger.throwArgumentError(`Multiple tokens found: ${result.length}`, \"mint\", mint);\n    }\n\n    const token = result[0];\n\n    if (tokenType === \"spl\" && \"version\" in token) {\n      return logger.throwArgumentError(\"invalid SPL token mint\", \"mint\", mint);\n    } else if (tokenType === \"lp\" && !(\"version\" in token)) {\n      return logger.throwArgumentError(\"invalid LP token mint\", \"mint\", mint);\n    }\n\n    return token as T extends \"all\" ? SplTokenInfo | LpTokenInfo : T extends \"spl\" ? SplTokenInfo : LpTokenInfo;\n  };\n\n  /**\n   * Get list of token list\n   */\n  getList = () => {\n    return this.tokenList;\n  };\n}\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\n\nimport { PublicKey } from \"@solana/web3.js\";\n\nimport { PublicKeyish, validateAndParsePublicKey } from \"../common\";\nimport { SOL, WSOL } from \"../token\";\n\n/**\n * A currency is any fungible financial instrument on Solana, including SOL and all SPL tokens.\n *\n * The only instance of the base class `Currency` is SOL.\n */\nexport class Currency {\n  public readonly symbol?: string;\n  public readonly name?: string;\n\n  public readonly decimals: number;\n\n  /**\n   * The only instance of the base class `Currency`.\n   */\n  public static readonly SOL: Currency = new Currency(SOL.decimals, SOL.symbol, SOL.name);\n\n  /**\n   * Constructs an instance of the base class `Currency`. The only instance of the base class `Currency` is `Currency.SOL`.\n   * @param decimals - decimals of the currency\n   * @param symbol - symbol of the currency\n   * @param name - name of the currency\n   */\n  public constructor(decimals: number, symbol = \"UNKNOWN\", name = \"UNKNOWN\") {\n    this.decimals = decimals;\n    this.symbol = symbol;\n    this.name = name;\n  }\n}\n\nexport function inspectCurrency() {\n  if (typeof Symbol !== \"undefined\" && typeof Symbol.for === \"function\") {\n    try {\n      // @ts-ignore\n      Currency.prototype[Symbol.for(\"nodejs.util.inspect.custom\")] = function () {\n        return `<Currency: decimals=${this.decimals}, name=${this.name}, symbol=${this.symbol}>`;\n      };\n    } catch (e) {\n      // @ts-ignore\n      Currency.prototype.inspect = function () {\n        return `<Currency: decimals=${this.decimals}, name=${this.name}, symbol=${this.symbol}>`;\n      };\n    }\n  } else {\n    // @ts-ignore\n    Currency.prototype.inspect = function () {\n      return `<Currency: decimals=${this.decimals}, name=${this.name}, symbol=${this.symbol}>`;\n    };\n  }\n}\n\n/**\n * Represents an SPL token with a unique address and some metadata.\n */\nexport class Token extends Currency {\n  public readonly mint: PublicKey;\n\n  /**\n   * The only instance of the base class `Token`.\n   */\n  public static readonly WSOL: Token = new Token(WSOL.mint, WSOL.decimals, SOL.symbol, SOL.name);\n\n  public constructor(mint: PublicKeyish, decimals: number, symbol = \"UNKNOWN\", name = \"UNKNOWN\") {\n    super(decimals, symbol, name);\n\n    this.mint = validateAndParsePublicKey(mint);\n  }\n\n  /**\n   * Returns true if the two tokens are equivalent, i.e. have the same mint address.\n   * @param other - other token to compare\n   */\n  public equals(other: Token): boolean {\n    // short circuit on reference equality\n    if (this === other) {\n      return true;\n    }\n    return this.mint.equals(other.mint);\n  }\n}\n\nexport function inspectToken() {\n  if (typeof Symbol !== \"undefined\" && typeof Symbol.for === \"function\") {\n    try {\n      // @ts-ignore\n      Token.prototype[Symbol.for(\"nodejs.util.inspect.custom\")] = function () {\n        return `<Token: mint=${this.mint.toBase58()}, decimals=${this.decimals}, name=${this.name}, symbol=${\n          this.symbol\n        }>`;\n      };\n    } catch (e) {\n      // @ts-ignore\n      Token.prototype.inspect = function () {\n        return `<Token: mint=${this.mint.toBase58()}, decimals=${this.decimals}, name=${this.name}, symbol=${\n          this.symbol\n        }>`;\n      };\n    }\n  } else {\n    // @ts-ignore\n    Token.prototype.inspect = function () {\n      return `<Token: mint=${this.mint.toBase58()}, decimals=${this.decimals}, name=${this.name}, symbol=${\n        this.symbol\n      }>`;\n    };\n  }\n}\n\n/**\n * Compares two currencies for equality\n */\nexport function currencyEquals(currencyA: Currency, currencyB: Currency): boolean {\n  if (currencyA instanceof Token && currencyB instanceof Token) {\n    return currencyA.equals(currencyB);\n  } else if (currencyA instanceof Token || currencyB instanceof Token) {\n    return false;\n  } else {\n    return currencyA === currencyB;\n  }\n}\n","import _Big from \"big.js\";\nimport BN from \"bn.js\";\nimport _Decimal from \"decimal.js-light\";\n\nimport { Logger } from \"../common\";\n\nimport { BigNumberish, parseBigNumberish } from \"./bignumber\";\nimport { ONE, Rounding } from \"./constant\";\nimport toFormat, { WrappedBig } from \"./to-format\";\n\nconst logger = Logger.from(\"entity/fraction\");\n\nconst Big = toFormat(_Big);\ntype Big = WrappedBig;\n\nconst Decimal = toFormat(_Decimal);\n\nconst toSignificantRounding = {\n  [Rounding.ROUND_DOWN]: Decimal.ROUND_DOWN,\n  [Rounding.ROUND_HALF_UP]: Decimal.ROUND_HALF_UP,\n  [Rounding.ROUND_UP]: Decimal.ROUND_UP,\n};\n\nconst toFixedRounding = {\n  [Rounding.ROUND_DOWN]: Big.roundDown,\n  [Rounding.ROUND_HALF_UP]: Big.roundHalfUp,\n  [Rounding.ROUND_UP]: Big.roundUp,\n};\n\nexport class Fraction {\n  public readonly numerator: BN;\n  public readonly denominator: BN;\n\n  public constructor(numerator: BigNumberish, denominator: BigNumberish = ONE) {\n    this.numerator = parseBigNumberish(numerator);\n    this.denominator = parseBigNumberish(denominator);\n  }\n\n  // performs floor division\n  public get quotient() {\n    return this.numerator.div(this.denominator);\n  }\n\n  public invert(): Fraction {\n    return new Fraction(this.denominator, this.numerator);\n  }\n\n  // +\n  public add(other: Fraction | BigNumberish): Fraction {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigNumberish(other));\n\n    if (this.denominator.eq(otherParsed.denominator)) {\n      return new Fraction(this.numerator.add(otherParsed.numerator), this.denominator);\n    }\n\n    return new Fraction(\n      this.numerator.mul(otherParsed.denominator).add(otherParsed.numerator.mul(this.denominator)),\n      this.denominator.mul(otherParsed.denominator),\n    );\n  }\n\n  // -\n  public sub(other: Fraction | BigNumberish): Fraction {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigNumberish(other));\n\n    if (this.denominator.eq(otherParsed.denominator)) {\n      return new Fraction(this.numerator.sub(otherParsed.numerator), this.denominator);\n    }\n\n    return new Fraction(\n      this.numerator.mul(otherParsed.denominator).sub(otherParsed.numerator.mul(this.denominator)),\n      this.denominator.mul(otherParsed.denominator),\n    );\n  }\n\n  // ×\n  public mul(other: Fraction | BigNumberish) {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigNumberish(other));\n\n    return new Fraction(this.numerator.mul(otherParsed.numerator), this.denominator.mul(otherParsed.denominator));\n  }\n\n  // ÷\n  public div(other: Fraction | BigNumberish) {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigNumberish(other));\n\n    return new Fraction(this.numerator.mul(otherParsed.denominator), this.denominator.mul(otherParsed.numerator));\n  }\n\n  public toSignificant(\n    significantDigits: number,\n    format: object = { groupSeparator: \"\" },\n    rounding: Rounding = Rounding.ROUND_HALF_UP,\n  ): string {\n    logger.assert(Number.isInteger(significantDigits), `${significantDigits} is not an integer.`);\n    logger.assert(significantDigits > 0, `${significantDigits} is not positive.`);\n\n    Decimal.set({ precision: significantDigits + 1, rounding: toSignificantRounding[rounding] });\n    const quotient = new Decimal(this.numerator.toString())\n      .div(this.denominator.toString())\n      .toSignificantDigits(significantDigits);\n    return quotient.toFormat(quotient.decimalPlaces(), format);\n  }\n\n  public toFixed(\n    decimalPlaces: number,\n    format: object = { groupSeparator: \"\" },\n    rounding: Rounding = Rounding.ROUND_HALF_UP,\n  ): string {\n    logger.assert(Number.isInteger(decimalPlaces), `${decimalPlaces} is not an integer.`);\n    logger.assert(decimalPlaces >= 0, `${decimalPlaces} is negative.`);\n\n    Big.DP = decimalPlaces;\n    Big.RM = toFixedRounding[rounding];\n    return new Big(this.numerator.toString()).div(this.denominator.toString()).toFormat(decimalPlaces, format);\n  }\n}\n","import Big, { BigConstructor, BigSource, RoundingMode } from \"big.js\";\nimport Decimal, { Config, Numeric } from \"decimal.js-light\";\nimport _toFarmat from \"toformat\";\n\ntype TakeStatic<T> = { [P in keyof T]: T[P] };\ninterface FormatOptions {\n  decimalSeparator?: string;\n  groupSeparator?: string;\n  groupSize?: number;\n  fractionGroupSeparator?: string;\n  fractionGroupSize?: number;\n}\ninterface WrappedBigConstructor extends TakeStatic<BigConstructor> {\n  new (value: BigSource): WrappedBig;\n  (value: BigSource): WrappedBig;\n  (): WrappedBigConstructor;\n\n  format: FormatOptions;\n}\nexport interface WrappedBig extends Big {\n  add(n: BigSource): WrappedBig;\n  abs(): WrappedBig;\n  div(n: BigSource): WrappedBig;\n  minus(n: BigSource): WrappedBig;\n  mod(n: BigSource): WrappedBig;\n  mul(n: BigSource): WrappedBig;\n  plus(n: BigSource): WrappedBig;\n  pow(exp: number): WrappedBig;\n  round(dp?: number, rm?: RoundingMode): WrappedBig;\n  sqrt(): WrappedBig;\n  sub(n: BigSource): WrappedBig;\n  times(n: BigSource): WrappedBig;\n  toFormat(): string;\n  toFormat(options: FormatOptions): string;\n  toFormat(fractionLength: number): string;\n  toFormat(fractionLength: number, options: FormatOptions): string;\n  toFormat(fractionLength: number, missionUnknown: number): string;\n  toFormat(fractionLength: number, missionUnknown: number, options: FormatOptions): string;\n}\n\ntype DecimalConstructor = typeof Decimal;\ninterface WrappedDecimalConstructor extends TakeStatic<DecimalConstructor> {\n  new (value: Numeric): WrappedDecimal;\n  clone(config?: Config): WrappedDecimalConstructor;\n  config(config: Config): WrappedDecimal;\n  set(config: Config): WrappedDecimal;\n  format: FormatOptions;\n}\nexport interface WrappedDecimal extends Decimal {\n  absoluteValue(): WrappedDecimal;\n  abs(): WrappedDecimal;\n  dividedBy(y: Numeric): WrappedDecimal;\n  div(y: Numeric): WrappedDecimal;\n  dividedToIntegerBy(y: Numeric): WrappedDecimal;\n  idiv(y: Numeric): WrappedDecimal;\n  logarithm(base?: Numeric): WrappedDecimal;\n  log(base?: Numeric): WrappedDecimal;\n  minus(y: Numeric): WrappedDecimal;\n  sub(y: Numeric): WrappedDecimal;\n  modulo(y: Numeric): WrappedDecimal;\n  mod(y: Numeric): WrappedDecimal;\n  naturalExponetial(): WrappedDecimal;\n  exp(): WrappedDecimal;\n  naturalLogarithm(): WrappedDecimal;\n  ln(): WrappedDecimal;\n  negated(): WrappedDecimal;\n  neg(): WrappedDecimal;\n  plus(y: Numeric): WrappedDecimal;\n  add(y: Numeric): WrappedDecimal;\n  squareRoot(): WrappedDecimal;\n  sqrt(): WrappedDecimal;\n  times(y: Numeric): WrappedDecimal;\n  mul(y: Numeric): WrappedDecimal;\n  toWrappedDecimalPlaces(dp?: number, rm?: number): WrappedDecimal;\n  todp(dp?: number, rm?: number): WrappedDecimal;\n  toInteger(): WrappedDecimal;\n  toint(): WrappedDecimal;\n  toPower(y: Numeric): WrappedDecimal;\n  pow(y: Numeric): WrappedDecimal;\n  toSignificantDigits(sd?: number, rm?: number): WrappedDecimal;\n  tosd(sd?: number, rm?: number): WrappedDecimal;\n  toFormat(options: FormatOptions): string;\n  toFormat(fractionLength: number): string;\n  toFormat(fractionLength: number, options: FormatOptions): string;\n  toFormat(fractionLength: number, missionUnknown: number): string;\n  toFormat(fractionLength: number, missionUnknown: number, options: FormatOptions): string;\n}\n\nconst toFormat: {\n  (fn: BigConstructor): WrappedBigConstructor;\n  (fn: DecimalConstructor): WrappedDecimalConstructor;\n} = _toFarmat;\nexport default toFormat;\n"],"mappings":"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Cf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,eACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,UACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,MACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,eACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,YACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,WACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,MACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,QACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,QACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,OACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,QACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,OACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,MACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,OACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,OACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,QACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,QACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,SACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,MACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,SACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,QACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,OACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,YACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,WACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,YACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,WACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,OACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,WACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,QACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,WACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,MACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,WACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,OACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,MACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,OACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,cACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,OACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,cACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,UACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,SACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,MACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,KACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,OACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,MACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,SACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,QACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,UACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,SACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,QACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,MACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,OACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,MACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,eACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,cACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,gBACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,eACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,aACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,YACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,YACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,WACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,iBACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,SACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,MACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,kBACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,OACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,iBACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,cACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,aACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,kBACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,iBACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,cACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,aACf,CACF,EACA,OAAQ,CACN,OAAQ,SACR,KAAM,SACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,QACf,CACF,EACA,QAAS,CACP,OAAQ,UACR,KAAM,UACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,SACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,QACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,OACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,SACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,QACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,sBACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,MACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,aACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,YACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,eACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,cACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,QACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,eACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,iBACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,gBACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,aACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,YACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,iBACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,gBACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,iBACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,SACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,WACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,UACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,YACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,WACf,CACF,EACA,OAAQ,CACN,OAAQ,SACR,KAAM,SACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,QACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,kBACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,iBACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,QACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,OACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,SACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,QACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,iBACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,gBACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,WACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,UACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,eACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,cACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,iBACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,gBACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,OACN,KAAM,+CACN,SAAU,EACV,WAAY,CAAC,CACf,EACA,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CV,YAAa,iBACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,QACN,KAAM,+CACN,SAAU,EACV,WAAY,CAAC,CACf,EACA,MAAO,CACL,OAAQ,QACR,KAAM,aACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,YACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,QACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,OACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,gBACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,eACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,SACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,QACf,CACF,EACA,OAAQ,CACN,OAAQ,SACR,KAAM,kBACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,iBACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,MACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,KACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,aACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,YACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,QACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,OACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,SACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,QACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,cACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,aACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,mBACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,kBACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,YACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,WACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,SACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,QACf,CACF,CACF,EAEa,GAA8B,GACvC,OAAO,WAAY,CACnB,MAAO,OAAO,OAAO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","names":[]}